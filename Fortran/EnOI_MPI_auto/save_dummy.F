!=====================================================
! Save Dummy File
! Programmed by G.-D. Pak in Sep., 2010
! mailto:gdpak@curl.snu.ac.kr
! Note : Save NC file for no state vector region
!======================================================

 subroutine save_dummy(ido,west,east,south,north,eastu,northv,eastp,northp,param_all)

 use netcdf
 use background, only : len_xi_rho,len_eta_rho,len_xi_u &
                       ,len_eta_u,len_xi_v,len_eta_v,len_s_rho,len_s_w &
                       ,cs_w,hdepth,iu,iv,izeta,itemp,isalt,s_rho
 !use kalman, only : old_ens,Nsta,Nens,istep
 use kalman, only : cwrank,num_idomain,stdout,sch_ens,T_IO

 implicit none

 integer,intent(in) :: ido,west,east,south,north,eastu,northv,eastp,northp
 character(10)      :: var_name

 character(150)      :: enafile,bg_file,outfile,ttext,new_outfile,dtext

 integer            :: i,j,k,t,status
 integer            :: ncout,ncin
 integer            :: dim_ocean_time, dim_one
 integer            :: dim_xi_rho,dim_xi_u,dim_xi_v,dim_eta_rho,dim_eta_u,dim_eta_v
 integer            :: dim_s_rho,dim_s_w,dim_xi_psi, dim_eta_psi, dim_two
 integer            :: varid_ntimes,varid_ndtfast,varid_dt,varid_dtfast,varid_dstart
 integer            :: varid_nHIS,varid_ndefHIS,varid_nRST,varid_ntsAVG,varid_nAVG
 integer            :: varid_ndefAVG,varid_Falpha,varid_Fbeta,varid_Fgamma,varid_tnu2
 integer            :: varid_visc2,varid_Akt_bak,varid_Akv_bak,varid_Akk_bak
 integer            :: varid_Akp_bak,varid_rdrg,varid_rdrg2,varid_Zob,varid_Zos
 integer            :: varid_Znudg,varid_M2nudg,varid_M3nudg,varid_Tnudg,varid_rho0
 integer            :: varid_gamma2,varid_spherical,varid_xl,varid_el,varid_theta_s
 integer            :: varid_theta_b,varid_Tcline,varid_hc,varid_s_rho,varid_s_w
 integer            :: varid_Cs_r,varid_Cs_w,varid_h,varid_f,varid_pm,varid_pn
 integer            :: varid_lon_rho,varid_lat_rho,varid_lon_u,varid_lat_u
 integer            :: varid_lon_v,varid_lat_v,varid_lon_psi,varid_lat_psi,varid_angle
 integer            :: varid_mask_rho,varid_mask_u,varid_mask_v,varid_mask_psi
 integer            :: varid_ocean_time,varid_zeta,varid_ubar,varid_vbar
 integer            :: varid_u,varid_v,varid_temp,varid_salt,varid_rho
 integer            :: varid_AKv,varid_AKt,varid_AKs
 
 integer            :: ntimesi,ndtfasti,nHISi,ndefHISi,nRSTi,ntsAVGi,nAVGi,ndefAVGi
!character          :: sphericali
 integer            :: sphericali
 real(8)            :: dti,dtfasti,dstarti,Falphai,Fbetai,Fgammai,visc2i,Akv_baki,Akk_baki
 real(8)            :: Akp_baki,rdrgi,rdrg2i,Zobi,Zosi,Znudgi,M2nudgi,M3nudgi,rho0i
 real(8)            :: gamma2i,xli,eli,theta_si,theta_bi,Tclinei,hci,ocean_timei
 real(8)            :: tnu2i(2),Akt_baki(2),Tnudgi(2),s_rhoi(len_s_rho),s_wi(len_s_w)
 real(8)            :: Cs_ri(len_s_rho),Cs_wi(len_s_w)
! real(8),allocatable,dimension(:,:) :: hi,fi,pmi,pni,lon_rhoi,lat_rhoi
! real(8),allocatable,dimension(:,:) :: lon_ui,lat_ui,lon_vi,lat_vi,lon_psii,lat_psii
! real(8),allocatable,dimension(:,:) :: anglei,mask_rhoi,mask_ui,mask_vi,mask_psii
! real(8),allocatable,dimension(:,:) :: zetai,ubari,vbari
! real(8),allocatable,dimension(:,:,:) :: ui,vi,tempi,salti,rhoi,AKvi,AKti,AKsi
! real(8)            :: hi(east-west+1,north-south+1),fi(east-west+1,north-south+1)
! real(8)            :: pmi(east-west+1,north-south+1),pni(east-west+1,north-south+1)
! real(8)            :: lon_rhoi(east-west+1,north-south+1),lat_rhoi(east-west+1,north-south+1)
 
 integer            :: len_ocean_time
 !real(kind=8),dimension(:) :: ocean_time
 !real(kind=8),allocatable,dimension(:,:,:)  :: zeta_r,ubar_r,vbar_r
 !real(kind=8),allocatable,dimension(:,:,:,:)  :: u_r,v_r,temp_r,salt_r
 !real(kind=8) :: tu,tv,dh_rho,hdepth_u,hdepth_v
 !real(kind=8),dimension(len_xi_rho, len_eta_rho           ) :: zeta_r
 !real(kind=8),dimension(len_xi_u  , len_eta_u             ) :: ubar_r
 !real(kind=8),dimension(len_xi_v  , len_eta_v             ) :: vbar_r
 !real(kind=8),dimension(len_xi_rho, len_eta_rho, len_s_rho) :: temp_r, salt_r
 !real(kind=8),dimension(len_xi_u  , len_eta_u  , len_s_rho) :: u_r
 !real(kind=8),dimension(len_xi_v  , len_eta_v  , len_s_rho) :: v_r

!allocate(hi(east-west+1,north-south+1),fi(east-west+1,north-south+1))
!allocate(pmi(east-west+1,north-south+1),pni(east-west+1,north-south+1))
!allocate(lon_rhoi(east-west+1,north-south+1),lat_rhoi(east-west+1,north-south+1))
!allocate(lon_ui(eastu-west+1,north-south+1),lat_ui(eastu-west+1,north-south+1))
!allocate(lon_vi(east-west+1,northv-south+1),lat_vi(east-west+1,northv-south+1))
!allocate(lon_psii(eastp-west,northp-south),lat_psii(eastp-west,northp-south))
!allocate(anglei(east-west+1,north-south+1),mask_rhoi(east-west+1,north-south+1))
!allocate(mask_ui(eastu-west+1,north-south+1),mask_vi(east-west+1,northv-south+1))
!allocate(mask_psii(eastp-west+1,northp-south+1),zetai(east-west+1,north-south+1))
!allocate(ubari(eastu-west+1,north-south+1),vbari(east-west+1,northv-south+1))
!allocate(ui(eastu-west+1,north-south+1,len_s_rho),vi(east-west+1,northv-south+1,len_s_rho))
!allocate(tempi(east-west+1,north-south+1,len_s_rho),salti(east-west+1,north-south+1,len_s_rho))
!allocate(rhoi(east-west+1,north-south+1,len_s_rho))
!allocate(AKvi(east-west+1,north-south+1,len_s_w),AKti(east-west+1,north-south+1,len_s_w))
!allocate(AKsi(east-west+1,north-south+1,len_s_w))

real(8)  :: hi(east-west+1,north-south+1),fi(east-west+1,north-south+1)
real(8)  :: pmi(east-west+1,north-south+1),pni(east-west+1,north-south+1)
real(8)  :: lon_rhoi(east-west+1,north-south+1),lat_rhoi(east-west+1,north-south+1)
real(8)  :: lon_ui(eastu-west+1,north-south+1),lat_ui(eastu-west+1,north-south+1)
real(8)  :: lon_vi(east-west+1,northv-south+1),lat_vi(east-west+1,northv-south+1)
real(8)  :: lon_psii(eastp-west+1,northp-south+1),lat_psii(eastp-west+1,northp-south+1)
real(8)  :: anglei(east-west+1,north-south+1),mask_rhoi(east-west+1,north-south+1)
real(8)  :: mask_ui(eastu-west+1,north-south+1),mask_vi(east-west+1,northv-south+1)
real(8)  :: mask_psii(eastp-west+1,northp-south+1),zetai(east-west+1,north-south+1)
!real(8)  :: mask_psii(eastp-west+1,northp-south+1),zetai(east-west+1,north-south+1,1)
!real(8)  :: ubari(eastu-west+1,north-south+1),vbari(east-west+1,northv-south+1)
real(8)  :: ubari(eastu-west+1,north-south+1,1),vbari(east-west+1,northv-south+1,1)
real(8)  :: ui(eastu-west+1,north-south+1,len_s_rho),vi(east-west+1,northv-south+1,len_s_rho)
!real(8)  :: ui(eastu-west+1,north-south+1,len_s_rho,1),vi(east-west+1,northv-south+1,len_s_rho,1)
real(8)  :: tempi(east-west+1,north-south+1,len_s_rho),salti(east-west+1,north-south+1,len_s_rho)
!real(8)  :: tempi(east-west+1,north-south+1,len_s_rho,1),salti(east-west+1,north-south+1,len_s_rho,1)
real(8)  :: rhoi(east-west+1,north-south+1,len_s_rho)
real(8)  :: AKvi(east-west+1,north-south+1,len_s_w),AKti(east-west+1,north-south+1,len_s_w)
real(8)  :: AKsi(east-west+1,north-south+1,len_s_w)
TYPE(T_IO), intent(inout) :: param_all ! added by Y-Y. Kim

!zeta_r = 0.0
!ubar_r = 0.0
!vbar_r = 0.0
!temp_r = 0.0
!salt_r = 0.0
!u_r = 0.0
!v_r = 0.0

!do t=1,Nens
outfile=trim(param_all%outname)
!outfile= "/HDD1/kimyy/reanalysis_data/output/exp01/ocean_rst_out.nc"  
!  write(ttext,'(I2.2)') t
!  if (ist<10) then
!    write(dtext,'(I1.1)') ist
!  else
!    write(dtext,'(I2.2)') ist
!  endif
!  if (t<11) then
!    outfile=trim(outfile)//trim(ttext)//'_'//trim(dtext)//'.nc'
!  else
!   outfile='/scratch/kosu02/roms_output/J_EnOI/Feb_v2/ocean_rst_out.nc'
! endif

! outfile="ocean_rst_ens"
! outfile=trim(outfile)//trim(ttext)//'_out.nc'
  ! Read old NC File
  status = NF90_OPEN(trim(outfile),NF90_NOWRITE,ncin)
  call handle_err(status,10000)
  ! Inquire variables
  status = NF90_INQ_VARID(ncin,"ntimes",varid_ntimes)
  call handle_err(status,10001)
  status = NF90_INQ_VARID(ncin,"ndtfast",varid_ndtfast)
  call handle_err(status,10002)
  status = NF90_INQ_VARID(ncin,"dt",varid_dt)
  call handle_err(status,10003)
  status = NF90_INQ_VARID(ncin,"dtfast",varid_dtfast)
  call handle_err(status,10004)
  status = NF90_INQ_VARID(ncin,"dstart",varid_dstart)
  call handle_err(status,10005)
  status = NF90_INQ_VARID(ncin,"nHIS",varid_nHIS)
  call handle_err(status,10006)
  status = NF90_INQ_VARID(ncin,"ndefHIS",varid_ndefHIS)
  call handle_err(status,10007)
  status = NF90_INQ_VARID(ncin,"nRST",varid_nRST)
  call handle_err(status,10008)
  status = NF90_INQ_VARID(ncin,"ntsAVG",varid_ntsAVG)
  call handle_err(status,10009)
  status = NF90_INQ_VARID(ncin,"nAVG",varid_nAVG)
  call handle_err(status,10010)
  status = NF90_INQ_VARID(ncin,"ndefAVG",varid_ndefAVG)
  call handle_err(status,10011)
  status = NF90_INQ_VARID(ncin,"Falpha",varid_Falpha)
  call handle_err(status,10012)
  status = NF90_INQ_VARID(ncin,"Fbeta",varid_Fbeta)
  call handle_err(status,10013)
  status = NF90_INQ_VARID(ncin,"Fgamma",varid_Fgamma)
  call handle_err(status,10014)
  status = NF90_INQ_VARID(ncin,"nl_tnu2",varid_tnu2)
  call handle_err(status,10015)
  status = NF90_INQ_VARID(ncin,"nl_visc2",varid_visc2)
  call handle_err(status,10016)
  status = NF90_INQ_VARID(ncin,"Akt_bak",varid_Akt_bak)
  call handle_err(status,10017)
  status = NF90_INQ_VARID(ncin,"Akv_bak",varid_Akv_bak)
  call handle_err(status,10018)

!if (t.LE.sch_ens) then 
! status = NF90_INQ_VARID(ncin,"Akk_bak",varid_Akk_bak)
!  call handle_err(status,10019)
!  status = NF90_INQ_VARID(ncin,"Akp_bak",varid_Akp_bak)
!  call handle_err(status,10020)
!endif

  status = NF90_INQ_VARID(ncin,"rdrg",varid_rdrg)
  call handle_err(status,10021)
  status = NF90_INQ_VARID(ncin,"rdrg2",varid_rdrg2)
  call handle_err(status,10022)
  status = NF90_INQ_VARID(ncin,"Zob",varid_Zob)
  call handle_err(status,10023)
  status = NF90_INQ_VARID(ncin,"Zos",varid_Zos)
  call handle_err(status,10024)
  status = NF90_INQ_VARID(ncin,"Znudg",varid_Znudg)
  call handle_err(status,10025)
  status = NF90_INQ_VARID(ncin,"M2nudg",varid_M2nudg)
  call handle_err(status,10026)
  status = NF90_INQ_VARID(ncin,"M3nudg",varid_M3nudg)
  call handle_err(status,10027)
  status = NF90_INQ_VARID(ncin,"Tnudg",varid_Tnudg)
  call handle_err(status,10028)
  status = NF90_INQ_VARID(ncin,"rho0",varid_rho0)
  call handle_err(status,10029)
  status = NF90_INQ_VARID(ncin,"gamma2",varid_gamma2)
  call handle_err(status,10030)
  status = NF90_INQ_VARID(ncin,"spherical",varid_spherical)
  call handle_err(status,10031)
  status = NF90_INQ_VARID(ncin,"xl",varid_xl)
  call handle_err(status,10032)
  status = NF90_INQ_VARID(ncin,"el",varid_el)
  call handle_err(status,10033)
  status = NF90_INQ_VARID(ncin,"theta_s",varid_theta_s)
  call handle_err(status,10034)
  status = NF90_INQ_VARID(ncin,"theta_b",varid_theta_b)
  call handle_err(status,10035)
  status = NF90_INQ_VARID(ncin,"Tcline",varid_Tcline)
  call handle_err(status,10036)
  status = NF90_INQ_VARID(ncin,"hc",varid_hc)
  call handle_err(status,10037)
  status = NF90_INQ_VARID(ncin,"s_rho",varid_s_rho)
  call handle_err(status,10038)
  status = NF90_INQ_VARID(ncin,"s_w",varid_s_w)
  call handle_err(status,10039)
  status = NF90_INQ_VARID(ncin,"Cs_r",varid_Cs_r)
  call handle_err(status,10040)
  status = NF90_INQ_VARID(ncin,"Cs_w",varid_Cs_w)
  call handle_err(status,10041)
  status = NF90_INQ_VARID(ncin,"h",varid_h)
  call handle_err(status,10042)
  status = NF90_INQ_VARID(ncin,"f",varid_f)
  call handle_err(status,10043)
  status = NF90_INQ_VARID(ncin,"pm",varid_pm)
  call handle_err(status,10044)
  status = NF90_INQ_VARID(ncin,"pn",varid_pn)
  call handle_err(status,10045)
  status = NF90_INQ_VARID(ncin,"lon_rho",varid_lon_rho)
  call handle_err(status,10046)
  status = NF90_INQ_VARID(ncin,"lat_rho",varid_lat_rho)
  call handle_err(status,10047)
  status = NF90_INQ_VARID(ncin,"lon_u",varid_lon_u)
  call handle_err(status,10048)
  status = NF90_INQ_VARID(ncin,"lat_u",varid_lat_u)
  call handle_err(status,10049)
  status = NF90_INQ_VARID(ncin,"lon_v",varid_lon_v)
  call handle_err(status,10050)
  status = NF90_INQ_VARID(ncin,"lat_v",varid_lat_v)
  call handle_err(status,10051)
  status = NF90_INQ_VARID(ncin,"lon_psi",varid_lon_psi)
  call handle_err(status,10052)
  status = NF90_INQ_VARID(ncin,"lat_psi",varid_lat_psi)
  call handle_err(status,10053)
  status = NF90_INQ_VARID(ncin,"angle",varid_angle)
  call handle_err(status,10054)
  status = NF90_INQ_VARID(ncin,"mask_rho",varid_mask_rho)
  call handle_err(status,10055)
  status = NF90_INQ_VARID(ncin,"mask_u",varid_mask_u)
  call handle_err(status,10056)
  status = NF90_INQ_VARID(ncin,"mask_v",varid_mask_v)
  call handle_err(status,10057)
  status = NF90_INQ_VARID(ncin,"mask_psi",varid_mask_psi)
  call handle_err(status,10058)
  status = NF90_INQ_VARID(ncin,"ocean_time",varid_ocean_time)
  call handle_err(status,10059)
  status = NF90_INQ_VARID(ncin,"zeta",varid_zeta)
  call handle_err(status,10060)
  status = NF90_INQ_VARID(ncin,"ubar",varid_ubar)
  call handle_err(status,10061)
  status = NF90_INQ_VARID(ncin,"vbar",varid_vbar)
  call handle_err(status,10062)
  status = NF90_INQ_VARID(ncin,"u",varid_u)
  call handle_err(status,10063)
  status = NF90_INQ_VARID(ncin,"v",varid_v)
  call handle_err(status,10064)
  status = NF90_INQ_VARID(ncin,"temp",varid_temp)
  call handle_err(status,10065)
  status = NF90_INQ_VARID(ncin,"salt",varid_salt)
  call handle_err(status,10066)
!  status = NF90_INQ_VARID(ncin,"rho",varid_rho)
!  call handle_err(status,10067)
!  status = NF90_INQ_VARID(ncin,"AKv",varid_AKv)
!  call handle_err(status,10068)
!  status = NF90_INQ_VARID(ncin,"AKt",varid_AKt)
!  call handle_err(status,10069)
!  status = NF90_INQ_VARID(ncin,"AKs",varid_AKs)
!  call handle_err(status,10070)
  ! Get vars
  status = NF90_GET_VAR(ncin,varid_ntimes,ntimesi)
  call handle_err(status,10101)
  status = NF90_GET_VAR(ncin,varid_ndtfast,ndtfasti)
  call handle_err(status,10102)
  status = NF90_GET_VAR(ncin,varid_dt,dti)
  call handle_err(status,10103)
  status = NF90_GET_VAR(ncin,varid_dtfast,dtfasti)
  call handle_err(status,10104)
  status = NF90_GET_VAR(ncin,varid_dstart,dstarti)
  call handle_err(status,10105)
  status = NF90_GET_VAR(ncin,varid_nHIS,nHISi)
  call handle_err(status,10106)
  status = NF90_GET_VAR(ncin,varid_ndefHIS,ndefHISi)
  call handle_err(status,10107)
  status = NF90_GET_VAR(ncin,varid_nRST,nRSTi)
  call handle_err(status,10108)
  status = NF90_GET_VAR(ncin,varid_ntsAVG,ntsAVGi)
  call handle_err(status,10109)
  status = NF90_GET_VAR(ncin,varid_nAVG,nAVGi)
  call handle_err(status,10110)
  status = NF90_GET_VAR(ncin,varid_ndefAVG,ndefAVGi)
  call handle_err(status,10111)
  status = NF90_GET_VAR(ncin,varid_Falpha,Falphai)
  call handle_err(status,10112)
  status = NF90_GET_VAR(ncin,varid_Fbeta,Fbetai)
  call handle_err(status,10113)
  status = NF90_GET_VAR(ncin,varid_Fgamma,Fgammai)
  call handle_err(status,10114)
  status = NF90_GET_VAR(ncin,varid_tnu2,tnu2i)
  call handle_err(status,10115)
  status = NF90_GET_VAR(ncin,varid_visc2,visc2i)
  call handle_err(status,10116)
  status = NF90_GET_VAR(ncin,varid_Akt_bak,Akt_baki)
  call handle_err(status,10117)
  status = NF90_GET_VAR(ncin,varid_Akv_bak,Akv_baki)
  call handle_err(status,10118)
  
! if (t.LE.sch_ens) then
!  status = NF90_GET_VAR(ncin,varid_Akk_bak,Akk_baki)
!  call handle_err(status,10119)
!  status = NF90_GET_VAR(ncin,varid_Akp_bak,Akp_baki)
!  call handle_err(status,10120)
! endif

  status = NF90_GET_VAR(ncin,varid_rdrg,rdrgi)
  call handle_err(status,10121)
  status = NF90_GET_VAR(ncin,varid_rdrg2,rdrg2i)
  call handle_err(status,10122)
  status = NF90_GET_VAR(ncin,varid_Zob,Zobi)
  call handle_err(status,10123)
  status = NF90_GET_VAR(ncin,varid_Zos,Zosi)
  call handle_err(status,10124)
  status = NF90_GET_VAR(ncin,varid_Znudg,Znudgi)
  call handle_err(status,10125)
  status = NF90_GET_VAR(ncin,varid_M2nudg,M2nudgi)
  call handle_err(status,10126)
  status = NF90_GET_VAR(ncin,varid_M3nudg,M3nudgi)
  call handle_err(status,10127)
  status = NF90_GET_VAR(ncin,varid_Tnudg,Tnudgi)
  call handle_err(status,10128)
  status = NF90_GET_VAR(ncin,varid_rho0,rho0i)
  call handle_err(status,10129)
  status = NF90_GET_VAR(ncin,varid_gamma2,gamma2i)
  call handle_err(status,10130)
  status = NF90_GET_VAR(ncin,varid_spherical,sphericali)
  call handle_err(status,10131)
  status = NF90_GET_VAR(ncin,varid_xl,xli)
  call handle_err(status,10132)
  status = NF90_GET_VAR(ncin,varid_el,eli)
  call handle_err(status,10133)
  status = NF90_GET_VAR(ncin,varid_theta_s,theta_si)
  call handle_err(status,10134)
  status = NF90_GET_VAR(ncin,varid_theta_b,theta_bi)
  call handle_err(status,10135)
  status = NF90_GET_VAR(ncin,varid_Tcline,Tclinei)
  call handle_err(status,10136)
  status = NF90_GET_VAR(ncin,varid_hc,hci)
  call handle_err(status,10137)
  status = NF90_GET_VAR(ncin,varid_s_rho,s_rhoi)
  call handle_err(status,10138)
  status = NF90_GET_VAR(ncin,varid_s_w,s_wi)
  call handle_err(status,10139)
  status = NF90_GET_VAR(ncin,varid_Cs_r,Cs_ri)
  call handle_err(status,10140)
  status = NF90_GET_VAR(ncin,varid_Cs_w,Cs_wi)
  call handle_err(status,10141)
  status = NF90_GET_VAR(ncin,varid_h,hi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10142)
  status = NF90_GET_VAR(ncin,varid_f,fi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10143)
  status = NF90_GET_VAR(ncin,varid_pm,pmi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10144)
  status = NF90_GET_VAR(ncin,varid_pn,pni,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10145)
  status = NF90_GET_VAR(ncin,varid_lon_rho,lon_rhoi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10146)
  status = NF90_GET_VAR(ncin,varid_lat_rho,lat_rhoi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10147)
  status = NF90_GET_VAR(ncin,varid_lon_u,lon_ui,start=(/west,south/),count=(/eastu-west+1,north-south+1/))
  call handle_err(status,10148)
  status = NF90_GET_VAR(ncin,varid_lat_u,lat_ui,start=(/west,south/),count=(/eastu-west+1,north-south+1/))
  call handle_err(status,10149)
  status = NF90_GET_VAR(ncin,varid_lon_v,lon_vi,start=(/west,south/),count=(/east-west+1,northv-south+1/))
  call handle_err(status,10150)
  status = NF90_GET_VAR(ncin,varid_lat_v,lat_vi,start=(/west,south/),count=(/east-west+1,northv-south+1/))
  call handle_err(status,10151)
  status = NF90_GET_VAR(ncin,varid_lon_psi,lon_psii,start=(/west,south/),count=(/eastp-west+1,northp-south+1/))
  call handle_err(status,10152)
  status = NF90_GET_VAR(ncin,varid_lat_psi,lat_psii,start=(/west,south/),count=(/eastp-west+1,northp-south+1/))
  call handle_err(status,10153)
  status = NF90_GET_VAR(ncin,varid_angle,anglei,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10154)
  status = NF90_GET_VAR(ncin,varid_mask_rho,mask_rhoi,start=(/west,south/),count=(/east-west+1,north-south+1/))
  call handle_err(status,10155)
  status = NF90_GET_VAR(ncin,varid_mask_u,mask_ui,start=(/west,south/),count=(/eastu-west+1,north-south+1/))
  call handle_err(status,10156)
  status = NF90_GET_VAR(ncin,varid_mask_v,mask_vi,start=(/west,south/),count=(/east-west+1,northv-south+1/))
  call handle_err(status,10157)
  status = NF90_GET_VAR(ncin,varid_mask_psi,mask_psii,start=(/west,south/),count=(/eastp-west+1,northp-south+1/))
  call handle_err(status,10158)
  status = NF90_GET_VAR(ncin,varid_ocean_time,ocean_timei)
  call handle_err(status,10159)
 status = NF90_GET_VAR(ncin,varid_zeta,zetai,start=(/west,south/),count=(/east-west+1,north-south+1/))
!  status = NF90_GET_VAR(ncin,varid_zeta,zetai,start=(/west,south,1/),count=(/east-west+1,north-south+1,1/))
  call handle_err(status,10160)
  status = NF90_GET_VAR(ncin,varid_ubar,ubari,start=(/west,south/),count=(/eastu-west+1,north-south+1/))
!  status = NF90_GET_VAR(ncin,varid_ubar,ubari,start=(/west,south,1/),count=(/eastu-west+1,north-south+1,1/))
  call handle_err(status,10161)
  status = NF90_GET_VAR(ncin,varid_vbar,vbari,start=(/west,south/),count=(/east-west+1,northv-south+1/))
!  status = NF90_GET_VAR(ncin,varid_vbar,vbari,start=(/west,south,1/),count=(/east-west+1,northv-south+1,1/))
  call handle_err(status,10162)
  status = NF90_GET_VAR(ncin,varid_u,ui,start=(/west,south,1/),count=(/eastu-west+1,north-south+1,len_s_rho/))
!  status = NF90_GET_VAR(ncin,varid_u,ui,start=(/west,south,1/),count=(/eastu-west+1,north-south+1,len_s_rho,1/))
  call handle_err(status,10163)
  status = NF90_GET_VAR(ncin,varid_v,vi,start=(/west,south,1/),count=(/east-west+1,northv-south+1,len_s_rho/))
! status = NF90_GET_VAR(ncin,varid_v,vi,start=(/west,south,1,1/),count=(/east-west+1,northv-south+1,len_s_rho,1/))
  call handle_err(status,10164)
  status = NF90_GET_VAR(ncin,varid_temp,tempi,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_rho/))
! status = NF90_GET_VAR(ncin,varid_temp,tempi,start=(/west,south,1,1/),count=(/east-west+1,north-south+1,len_s_rho,1/))
  call handle_err(status,10165)
  status = NF90_GET_VAR(ncin,varid_salt,salti,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_rho/))
! status = NF90_GET_VAR(ncin,varid_salt,salti,start=(/west,south,1,1/),count=(/east-west+1,north-south+1,len_s_rho,1/))
  call handle_err(status,10166)
!  status = NF90_GET_VAR(ncin,varid_rho,rhoi,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_rho/))
!  call handle_err(status,10167)
!  status = NF90_GET_VAR(ncin,varid_AKv,AKvi,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_w/))
!  call handle_err(status,10168)
!  status = NF90_GET_VAR(ncin,varid_AKt,AKti,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_w/))
!  call handle_err(status,10169)
!  status = NF90_GET_VAR(ncin,varid_AKs,AKsi,start=(/west,south,1/),count=(/east-west+1,north-south+1,len_s_w/))
!  call handle_err(status,10170)
  
  status = NF90_CLOSE(ncin)
  call handle_err(status,10171)
  
! new_outfile='/scratch/kosu02/roms_output/EnOI_MPI/result/ocean_rst_in.nc'
!  new_outfile='/HDD1/kimyy/reanalysis_data/output/exp01/result/ocean_rst_in.nc'
   
! new_outfile=trim(new_outfile)//trim(ttext)//'_in.nc'
! new_outfile=trim(new_outfile)//'.'//trim(ttext)
!  new_outfile=trim(new_outfile)//'_'//trim(ttext)//'.nc'

  new_outfile=trim(param_all%inname_piece_path)//'/ocean_rst_in'
  write(ttext,'(I4.4)') ido-1
  new_outfile=trim(new_outfile)//'_'//trim(ttext)//'.nc'
!ocean_timei = 1 ! kimyy

!  new_outfile= "/scratch/kosu02/roms_output/NP_10year/test6_ens/Feb/result/ocean_ens"
!  write(ttext,'(I2.2)') t
!  if (ist<10) then
!    write(dtext,'(I1.1)') ist
!  else
!    write(dtext,'(I2.2)') ist
!  endif
!  if (t<11) then
!    outfile=trim(outfile)//trim(ttext)//'_'//trim(dtext)//'_in.nc'
!  else
!    outfile='/scratch/kosu02/roms_output/J_EnOI/Feb_v2/ocean_rst_in.nc'
!  endif




! if (t.eq.1) then
!   write(stdout,*) new_outfile
!print *,"new_outfile_dummy :",  new_outfile
! endif
  ! Create NC File
  status = NF90_CREATE(new_outfile,NF90_CLOBBER,ncout)
  call handle_err(status,20000)

  ! Define dimensions  
!print *, "east =", east
!print *, "west =", west
!print *, "eastp = ", eastp
!print *, "north = ", north
!print *, "south = ", south
!print *, "northv =", northv
!print *, "len_s_rho =", len_s_rho
!print *, "len_s_w = ", len_s_w
  status = NF90_DEF_DIM(ncout,"xi_rho",east-west+1,dim_xi_rho)
  call handle_err(status,20001)
  status = NF90_DEF_DIM(ncout,"xi_u",eastu-west+1,dim_xi_u)
  call handle_err(status,20002)
  status = NF90_DEF_DIM(ncout,"xi_v",east-west+1,dim_xi_v)
  call handle_err(status,20003)
  status = NF90_DEF_DIM(ncout,"xi_psi",eastp-west+1,dim_xi_psi)
  call handle_err(status,20004)
  status = NF90_DEF_DIM(ncout,"eta_rho",north-south+1,dim_eta_rho)
  call handle_err(status,20005)
  status = NF90_DEF_DIM(ncout,"eta_u",north-south+1,dim_eta_u)
  call handle_err(status,20006)
  status = NF90_DEF_DIM(ncout,"eta_v",northv-south+1,dim_eta_v)
  call handle_err(status,20007)
  status = NF90_DEF_DIM(ncout,"eta_psi",northv-south+1,dim_eta_psi)
  call handle_err(status,20008)
  status = NF90_DEF_DIM(ncout,"s_rho",len_s_rho,dim_s_rho)
  call handle_err(status,20009)
  status = NF90_DEF_DIM(ncout,"s_w",len_s_w,dim_s_w)
  call handle_err(status,20010)
  status = NF90_DEF_DIM(ncout,"one",1,dim_one)
  call handle_err(status,20011)
  status = NF90_DEF_DIM(ncout,"two",2,dim_two)
  call handle_err(status,20012)
  status = NF90_DEF_DIM(ncout,"ocean_time",1,dim_ocean_time)
! status = NF90_DEF_DIM(ncout,"ocean_time",nf90_unlimited,dim_ocean_time) !kimyy
  call handle_err(status,20013)
  ! Define variables
  status = NF90_DEF_VAR(ncout,"ntimes",NF90_INT,dim_one,varid_ntimes)
  call handle_err(status,20101)
  status = NF90_DEF_VAR(ncout,"ndtfast",NF90_INT,dim_one,varid_ndtfast)
  call handle_err(status,20102)
  status = NF90_DEF_VAR(ncout,"dt",NF90_DOUBLE,dim_one,varid_dt)
  call handle_err(status,20103)
  status = NF90_DEF_VAR(ncout,"dtfast",NF90_DOUBLE,dim_one,varid_dtfast)
  call handle_err(status,20104)
  status = NF90_DEF_VAR(ncout,"dstart",NF90_DOUBLE,dim_one,varid_dstart)
  call handle_err(status,20105)
  status = NF90_DEF_VAR(ncout,"nHIS",NF90_INT,dim_one,varid_nHIS)
  call handle_err(status,20106)
  status = NF90_DEF_VAR(ncout,"ndefHIS",NF90_INT,dim_one,varid_ndefHIS)
  call handle_err(status,20107)
  status = NF90_DEF_VAR(ncout,"nRST",NF90_INT,dim_one,varid_nRST)
  call handle_err(status,20108)
  status = NF90_DEF_VAR(ncout,"ntsAVG",NF90_INT,dim_one,varid_ntsAVG)
  call handle_err(status,20109)
  status = NF90_DEF_VAR(ncout,"ndefAVG",NF90_INT,dim_one,varid_ndefAVG)
  call handle_err(status,20110)
  status = NF90_DEF_VAR(ncout,"Falpha",NF90_DOUBLE,dim_one,varid_Falpha)
  call handle_err(status,20111)
  status = NF90_DEF_VAR(ncout,"Fbeta",NF90_DOUBLE,dim_one,varid_Fbeta)
  call handle_err(status,20112)
  status = NF90_DEF_VAR(ncout,"Fgamma",NF90_DOUBLE,dim_one,varid_Fgamma)
  call handle_err(status,20113)
  status = NF90_DEF_VAR(ncout,"nl_tnu2",NF90_DOUBLE,dim_two,varid_tnu2)
  call handle_err(status,20114)
  status = NF90_DEF_VAR(ncout,"nl_visc2",NF90_DOUBLE,dim_one,varid_visc2)
  call handle_err(status,20115)
  status = NF90_DEF_VAR(ncout,"Akt_bak",NF90_DOUBLE,dim_two,varid_Akt_bak)
  call handle_err(status,20116)
  status = NF90_DEF_VAR(ncout,"Akv_bak",NF90_DOUBLE,dim_one,varid_Akv_bak)
  call handle_err(status,20117)
!if (t.LE.sch_ens) then
!  status = NF90_DEF_VAR(ncout,"Akk_bak",NF90_DOUBLE,dim_one,varid_Akk_bak)
!  call handle_err(status,20118)
!  status = NF90_DEF_VAR(ncout,"Akp_bak",NF90_DOUBLE,dim_one,varid_Akp_bak)
!  call handle_err(status,20119)
!endif
  status = NF90_DEF_VAR(ncout,"rdrg",NF90_DOUBLE,dim_one,varid_rdrg)
  call handle_err(status,20120)
  status = NF90_DEF_VAR(ncout,"rdrg2",NF90_DOUBLE,dim_one,varid_rdrg2)
  call handle_err(status,20121)
  status = NF90_DEF_VAR(ncout,"Zob",NF90_DOUBLE,dim_one,varid_Zob)
  call handle_err(status,20122)
  status = NF90_DEF_VAR(ncout,"Zos",NF90_DOUBLE,dim_one,varid_Zos)
  call handle_err(status,20123)
  status = NF90_DEF_VAR(ncout,"Znudg",NF90_DOUBLE,dim_one,varid_Znudg)
  call handle_err(status,20124)
  status = NF90_DEF_VAR(ncout,"M2nudg",NF90_DOUBLE,dim_one,varid_M2nudg)
  call handle_err(status,20125)
  status = NF90_DEF_VAR(ncout,"M3nudg",NF90_DOUBLE,dim_one,varid_M3nudg)
  call handle_err(status,20126)
  status = NF90_DEF_VAR(ncout,"Tnudg",NF90_DOUBLE,dim_two,varid_Tnudg)
  call handle_err(status,20127)
  status = NF90_DEF_VAR(ncout,"rho0",NF90_DOUBLE,dim_one,varid_rho0)
  call handle_err(status,20128)
  status = NF90_DEF_VAR(ncout,"gamma2",NF90_DOUBLE,dim_one,varid_gamma2)
  call handle_err(status,20129)
! status = NF90_DEF_VAR(ncout,"spherical",NF90_CHAR,dim_one,varid_spherical)
  status = NF90_DEF_VAR(ncout,"spherical",NF90_INT,dim_one,varid_spherical)
  call handle_err(status,20130)
  status = NF90_DEF_VAR(ncout,"xl",NF90_DOUBLE,dim_one,varid_xl)
  call handle_err(status,20131)
  status = NF90_DEF_VAR(ncout,"el",NF90_DOUBLE,dim_one,varid_el)
  call handle_err(status,20132)
  status = NF90_DEF_VAR(ncout,"theta_s",NF90_DOUBLE,dim_one,varid_theta_s)
  call handle_err(status,20133)
  status = NF90_DEF_VAR(ncout,"theta_b",NF90_DOUBLE,dim_one,varid_theta_b)
  call handle_err(status,20134)
  status = NF90_DEF_VAR(ncout,"Tcline",NF90_DOUBLE,dim_one,varid_Tcline)
  call handle_err(status,20135)
  status = NF90_DEF_VAR(ncout,"hc",NF90_DOUBLE,dim_one,varid_hc)
  call handle_err(status,20136)
  status = NF90_DEF_VAR(ncout,"s_rho",NF90_DOUBLE,dim_s_rho,varid_s_rho)
  call handle_err(status,20137)
  status = NF90_DEF_VAR(ncout,"s_w",NF90_DOUBLE,dim_s_w,varid_s_w)
  call handle_err(status,20138)
  status = NF90_DEF_VAR(ncout,"Cs_r",NF90_DOUBLE,dim_s_rho,varid_Cs_r)
  call handle_err(status,20139)
  status = NF90_DEF_VAR(ncout,"Cs_w",NF90_DOUBLE,dim_s_w,varid_Cs_w)
  call handle_err(status,20140)
  status = NF90_DEF_VAR(ncout,"h",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_h)
  call handle_err(status,20141)
  status = NF90_DEF_VAR(ncout,"f",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_f)
  call handle_err(status,20142)
  status = NF90_DEF_VAR(ncout,"pm",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_pm)
  call handle_err(status,20143)
  status = NF90_DEF_VAR(ncout,"pn",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_pn)
  call handle_err(status,20144)
  status = NF90_DEF_VAR(ncout,"lon_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_lon_rho)
  call handle_err(status,20145)
  status = NF90_DEF_VAR(ncout,"lat_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_lat_rho)
  call handle_err(status,20146)
  status = NF90_DEF_VAR(ncout,"lon_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_lon_u)
  call handle_err(status,20147)
  status = NF90_DEF_VAR(ncout,"lat_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_lat_u)
  call handle_err(status,20148)
  status = NF90_DEF_VAR(ncout,"lon_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_lon_v)
  call handle_err(status,20149)
  status = NF90_DEF_VAR(ncout,"lat_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_lat_v)
  call handle_err(status,20150)
  status = NF90_DEF_VAR(ncout,"lon_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_lon_psi)
  call handle_err(status,20151)
  status = NF90_DEF_VAR(ncout,"lat_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_lat_psi)
  call handle_err(status,20152)
  status = NF90_DEF_VAR(ncout,"angle",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_angle)
  call handle_err(status,20153)
  status = NF90_DEF_VAR(ncout,"mask_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_mask_rho)
  call handle_err(status,20154)
  status = NF90_DEF_VAR(ncout,"mask_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_mask_u)
  call handle_err(status,20155)
  status = NF90_DEF_VAR(ncout,"mask_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_mask_v)
  call handle_err(status,20156)
  status = NF90_DEF_VAR(ncout,"mask_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_mask_psi)
  call handle_err(status,20157)
  status = NF90_DEF_VAR(ncout,"ocean_time",NF90_DOUBLE,dim_ocean_time,varid_ocean_time)
  call handle_err(status,20158)
  status = NF90_DEF_VAR(ncout,"zeta",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_ocean_time/),varid_zeta)
  call handle_err(status,20159)
  status = NF90_DEF_VAR(ncout,"ubar",NF90_DOUBLE,(/dim_xi_u,dim_eta_u,dim_ocean_time/),varid_ubar)
  call handle_err(status,20160)
  status = NF90_DEF_VAR(ncout,"vbar",NF90_DOUBLE,(/dim_xi_v,dim_eta_v,dim_ocean_time/),varid_vbar)
  call handle_err(status,20161)
  status = NF90_DEF_VAR(ncout,"u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u,dim_s_rho,dim_ocean_time/),varid_u)
  call handle_err(status,20162)
  status = NF90_DEF_VAR(ncout,"v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v,dim_s_rho,dim_ocean_time/),varid_v)
  call handle_err(status,20163)
  status = NF90_DEF_VAR(ncout,"temp",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_temp)
  call handle_err(status,20164)
  status = NF90_DEF_VAR(ncout,"salt",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_salt)
  call handle_err(status,20165)
!  status = NF90_DEF_VAR(ncout,"rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_rho)
!  call handle_err(status,20166)
!  status = NF90_DEF_VAR(ncout,"AKv",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKv)
!  call handle_err(status,20167)
!  status = NF90_DEF_VAR(ncout,"AKt",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKt)
!  call handle_err(status,20168)
!  status = NF90_DEF_VAR(ncout,"AKs",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKs)
!  call handle_err(status,20169)

  ! Global attribute
  status = NF90_PUT_ATT(ncout,NF90_GLOBAL,'NumFilesInSet',num_idomain)

  ! Variable attribute
  status = NF90_PUT_ATT(ncout,varid_ntimes,"long_name","number of long time-steps")
  call handle_err(status,202011)
  status = NF90_PUT_ATT(ncout,varid_ndtfast,"long_name","number of short time-steps")
  call handle_err(status,202021)
  status = NF90_PUT_ATT(ncout,varid_dt,"long_name","size of long time-steps")
  call handle_err(status,202031)
  status = NF90_PUT_ATT(ncout,varid_dt,"units","second")
  call handle_err(status,202032)
  status = NF90_PUT_ATT(ncout,varid_dtfast,"long_name","size of short time-steps")
  call handle_err(status,202041)
  status = NF90_PUT_ATT(ncout,varid_dtfast,"units","second")
  call handle_err(status,202042)
  status = NF90_PUT_ATT(ncout,varid_dstart,"long_name","time stamp assigned to model initilization")
  call handle_err(status,202051)
  status = NF90_PUT_ATT(ncout,varid_dstart,"units","days since 1982-01-01 00:00:00")
  call handle_err(status,202052)
  status = NF90_PUT_ATT(ncout,varid_nHIS,"long_name","number of time-steps between history records")
  call handle_err(status,202061)
  status = NF90_PUT_ATT(ncout,varid_ndefHIS,"long_name","number of time-steps between the creation of history files")
  call handle_err(status,202071)
  status = NF90_PUT_ATT(ncout,varid_nRST,"long_name","number of time-steps between restart records")
  call handle_err(status,202081)
  status = NF90_PUT_ATT(ncout,varid_ntsAVG,"long_name","starting time-step for accumulation of time-averaged fields")
  call handle_err(status,202091)
  status = NF90_PUT_ATT(ncout,varid_nAVG,"long_name","number of time-steps between time-averaged records")
  call handle_err(status,202101)
  status = NF90_PUT_ATT(ncout,varid_ndefAVG,"long_name","number of time-steps between the creation of average files")
  call handle_err(status,202111)
  status = NF90_PUT_ATT(ncout,varid_Falpha,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,202121)
  status = NF90_PUT_ATT(ncout,varid_Fbeta,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,202131)
  status = NF90_PUT_ATT(ncout,varid_Fgamma,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,202141)
  status = NF90_PUT_ATT(ncout,varid_tnu2,"long_name","nonlinear model Laplacian mixing coefficient for tracers")
  call handle_err(status,202151)
  status = NF90_PUT_ATT(ncout,varid_tnu2,"units","meter2 second-1")
  call handle_err(status,202152)
  status = NF90_PUT_ATT(ncout,varid_visc2,"long_name","nonlinear model Laplacian mixing coefficient for momentum")
  call handle_err(status,202161)
  status = NF90_PUT_ATT(ncout,varid_visc2,"units","meter2 second-1")
  call handle_err(status,202162)
  status = NF90_PUT_ATT(ncout,varid_Akt_bak,"long_name","background vertical mixing coefficient for tracers")
  call handle_err(status,202171)
  status = NF90_PUT_ATT(ncout,varid_Akt_bak,"units","meter2 second-1")
  call handle_err(status,202172)
  status = NF90_PUT_ATT(ncout,varid_Akv_bak,"long_name","background vertical mixing coefficient for momentum")
  call handle_err(status,202181)
  status = NF90_PUT_ATT(ncout,varid_Akv_bak,"units","meter2 second-1")
  call handle_err(status,202182)
 
!if (t.LE.sch_ens)then
! status = NF90_PUT_ATT(ncout,varid_Akk_bak,"long_name","background vertical mixing coefficient for turbulent energy")
!  call handle_err(status,202191)
!  status = NF90_PUT_ATT(ncout,varid_Akk_bak,"units","meter2 second-1")
!  call handle_err(status,202192)
!  status = NF90_PUT_ATT(ncout,varid_Akp_bak,"long_name","background vertical mixing coefficient for length scale")
!  call handle_err(status,202201)
!  status = NF90_PUT_ATT(ncout,varid_Akp_bak,"units","meter2 second-1")
!  call handle_err(status,202202)
!endif  

  status = NF90_PUT_ATT(ncout,varid_rdrg,"long_name","linear drag coefficient")
  call handle_err(status,202211)
  status = NF90_PUT_ATT(ncout,varid_rdrg,"units","meter second-1")
  call handle_err(status,202212)
  status = NF90_PUT_ATT(ncout,varid_rdrg2,"long_name","quadratic drag coefficient")
  call handle_err(status,202221)
  status = NF90_PUT_ATT(ncout,varid_Zos,"long_name","surface roughness")
  call handle_err(status,202231)
  status = NF90_PUT_ATT(ncout,varid_Zos,"units","meter")
  call handle_err(status,202232)
  status = NF90_PUT_ATT(ncout,varid_Znudg,"long_name","free-surface nudging/relaxation inverse time scale")
  call handle_err(status,202241)
  status = NF90_PUT_ATT(ncout,varid_Znudg,"units","day-1")
  call handle_err(status,202242)
  status = NF90_PUT_ATT(ncout,varid_M2nudg,"long_name","2D momentum nudging/relaxation inverse time scale")
  call handle_err(status,202251)
  status = NF90_PUT_ATT(ncout,varid_M2nudg,"units","day-1")
  call handle_err(status,202252)
  status = NF90_PUT_ATT(ncout,varid_M3nudg,"long_name","3D momentum nudging/relaxation inverse time scale")
  call handle_err(status,202261)
  status = NF90_PUT_ATT(ncout,varid_M3nudg,"units","day-1")
  call handle_err(status,202262)
  status = NF90_PUT_ATT(ncout,varid_Tnudg,"long_name","Tracers nudging/relaxation inverse time scale")
  call handle_err(status,202271)
  status = NF90_PUT_ATT(ncout,varid_Tnudg,"units","day-1")
  call handle_err(status,202272)
  status = NF90_PUT_ATT(ncout,varid_rho0,"long_name","mean density used in Boussinesq approximation")
  call handle_err(status,202281)
  status = NF90_PUT_ATT(ncout,varid_rho0,"units","kilogram meter-3")
  call handle_err(status,202282)
  status = NF90_PUT_ATT(ncout,varid_gamma2,"long_name","Slipperiness parameter")
  call handle_err(status,202291)
  status = NF90_PUT_ATT(ncout,varid_spherical,"long_name","grid type logical switch")
  call handle_err(status,202301)
  status = NF90_PUT_ATT(ncout,varid_spherical,"option_T","spherical")
  call handle_err(status,202302)
  status = NF90_PUT_ATT(ncout,varid_spherical,"option_F","Cartesian")
  call handle_err(status,202303)
  status = NF90_PUT_ATT(ncout,varid_xl,"long_name","domain length in the XI-direction")
  call handle_err(status,202311)
  status = NF90_PUT_ATT(ncout,varid_xl,"units","meter")
  call handle_err(status,202312)
  status = NF90_PUT_ATT(ncout,varid_el,"long_name","domain length in the ETA-direction")
  call handle_err(status,202321)
  status = NF90_PUT_ATT(ncout,varid_el,"units","meter")
  call handle_err(status,202322)
  status = NF90_PUT_ATT(ncout,varid_theta_s,"long_name","S-coordinate surface control parameter")
  call handle_err(status,202331)
  status = NF90_PUT_ATT(ncout,varid_theta_b,"long_name","S-coordinate bottom control parameter")
  call handle_err(status,202341)
  status = NF90_PUT_ATT(ncout,varid_Tcline,"long_name","S-coordinate surface/bottom layer width")
  call handle_err(status,202351)
  status = NF90_PUT_ATT(ncout,varid_Tcline,"units","meter")
  call handle_err(status,202352)
  status = NF90_PUT_ATT(ncout,varid_hc,"long_name","S-coordinate parameter, critical depth")
  call handle_err(status,202361)
  status = NF90_PUT_ATT(ncout,varid_hc,"units","meter")
  call handle_err(status,202362)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"long_name","S-coordinate at RHO-points")
  call handle_err(status,202371)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"valid_min",-1)
  call handle_err(status,202372)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"valid_max",0)
  call handle_err(status,202373)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"standard_name","ocean_s_coordinate")
  call handle_err(status,202374)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"formula_terms","s: s_rho eta: zeta depth: h a: theta_s b: theta_b depth_c: hc")
  call handle_err(status,202375)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"field","s_rho, scalar")
  call handle_err(status,202376)
  status = NF90_PUT_ATT(ncout,varid_s_w,"long_name","S-coordinate at W-points")
  call handle_err(status,202381)
  status = NF90_PUT_ATT(ncout,varid_s_w,"valid_min",-1)
  call handle_err(status,202382)
  status = NF90_PUT_ATT(ncout,varid_s_w,"valid_max",0)
  call handle_err(status,202383)
  status = NF90_PUT_ATT(ncout,varid_s_w,"standard_name","ocean_s_coordinate")
  call handle_err(status,202384)
  status = NF90_PUT_ATT(ncout,varid_s_w,"formula_terms","s: s_w eta: zeta depth: h a: theta_s b: theta_b depth_c: hc")
  call handle_err(status,202385)
  status = NF90_PUT_ATT(ncout,varid_s_w,"field","s_w, scalar")
  call handle_err(status,202386)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"long_name","S-coordinate stretching curves at RHO-points")
  call handle_err(status,202391)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"valid_min",-1)
  call handle_err(status,202392)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"valid_max",0)
  call handle_err(status,202393)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"field","Cs_r, scalar")
  call handle_err(status,202394)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"long_name","S-coordinate stretching curves at W-points")
  call handle_err(status,202401)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"valid_min",-1)
  call handle_err(status,202402)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"valid_max",0)
  call handle_err(status,202403)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"field","Cs_w, scalar")
  call handle_err(status,202404)
  status = NF90_PUT_ATT(ncout,varid_h,"long_name","bathymetry at RHO-points")
  call handle_err(status,202411)
  status = NF90_PUT_ATT(ncout,varid_h,"units","meter")
  call handle_err(status,202412)
  status = NF90_PUT_ATT(ncout,varid_h,"coordinates","lat_rho lon_rho")
  call handle_err(status,202413)
  status = NF90_PUT_ATT(ncout,varid_h,"field","bath, scalar")
  call handle_err(status,202414)
  status = NF90_PUT_ATT(ncout,varid_f,"long_name","Coriolis parameter at RHO-points")
  call handle_err(status,202421)
  status = NF90_PUT_ATT(ncout,varid_f,"units","second-1")
  call handle_err(status,202422)
  status = NF90_PUT_ATT(ncout,varid_f,"coordinates","lat_rho lon_rho")
  call handle_err(status,202423)
  status = NF90_PUT_ATT(ncout,varid_f,"field","coriolis, scalar")
  call handle_err(status,202424)
  status = NF90_PUT_ATT(ncout,varid_pm,"long_name","curvilinear coordinate metric in XI")
  call handle_err(status,202431)
  status = NF90_PUT_ATT(ncout,varid_pm,"units","meter-1")
  call handle_err(status,202432)
  status = NF90_PUT_ATT(ncout,varid_pm,"coordinates","lat_rho lon_rho")
  call handle_err(status,202433)
  status = NF90_PUT_ATT(ncout,varid_pm,"field","pm, scalar")
  call handle_err(status,202434)
  status = NF90_PUT_ATT(ncout,varid_pn,"long_name","curvilinear coordinate metric in ETA")
  call handle_err(status,202441)
  status = NF90_PUT_ATT(ncout,varid_pn,"units","meter-1")
  call handle_err(status,202442)
  status = NF90_PUT_ATT(ncout,varid_pn,"coordinates","lat_rho lon_rho")
  call handle_err(status,202443)
  status = NF90_PUT_ATT(ncout,varid_pn,"field","pn, scalar")
  call handle_err(status,202444)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"long_name","longitude of RHO-points")
  call handle_err(status,202451)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"units","degree_east")
  call handle_err(status,202452)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"field","lon_rho, scalar")
  call handle_err(status,202453)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"long_name","latitude of RHO-points")
  call handle_err(status,202454)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"units","degree_north")
  call handle_err(status,202455)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"field","lat_rho, scalar")
  call handle_err(status,202456)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"long_name","longitude of U-points")
  call handle_err(status,202461)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"units","degree_east")
  call handle_err(status,202462)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"field","lon_u, scalar")
  call handle_err(status,202463)
  status = NF90_PUT_ATT(ncout,varid_lat_u,"long_name","latitude of U-points")
  call handle_err(status,202471)
  status = NF90_PUT_ATT(ncout,varid_lat_u,"units","degree_north")
  call handle_err(status,202472)
  status = NF90_PUT_ATT(ncout,varid_lat_u,"field","lat_u, scalar")
  call handle_err(status,202473)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"long_name","longitude of V-points")
  call handle_err(status,202481)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"units","degree_east")
  call handle_err(status,202482)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"field","lon_v, scalar")
  call handle_err(status,202483) 
  status = NF90_PUT_ATT(ncout,varid_lat_v,"long_name","latitude of V-points")
  call handle_err(status,202491)
  status = NF90_PUT_ATT(ncout,varid_lat_v,"units","degree_north")
  call handle_err(status,202492)
  status = NF90_PUT_ATT(ncout,varid_lat_v,"field","lat_v, scalar")
  call handle_err(status,202493) 
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"long_name","longitude of PSI-points")
  call handle_err(status,202501)
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"units","degree_east")
  call handle_err(status,202502)
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"field","lon_psi, scalar")
  call handle_err(status,202503)
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"long_name","latitude of PSI-points")
  call handle_err(status,202511)
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"units","degree_north")
  call handle_err(status,202512)
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"field","lat_psi, scalar")
  call handle_err(status,202513) 
  status = NF90_PUT_ATT(ncout,varid_angle,"long_name","angle between XI-axis and EAST")
  call handle_err(status,202521)
  status = NF90_PUT_ATT(ncout,varid_angle,"units","radians")
  call handle_err(status,202522)
  status = NF90_PUT_ATT(ncout,varid_angle,"coordinates","lat_rho lon_rho")
  call handle_err(status,202523)
  status = NF90_PUT_ATT(ncout,varid_angle,"field","angle, scalar")
  call handle_err(status,202524)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"long_name","mask on RHO-points")
  call handle_err(status,202531)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"option_0","land")
  call handle_err(status,202532)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"option_1","water")
  call handle_err(status,202533) 
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"coordinates","lat_rho lon_rho")
  call handle_err(status,202534)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"long_name","mask on U-points")
  call handle_err(status,202541)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"option_0","land")
  call handle_err(status,202542)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"option_1","water")
  call handle_err(status,202543) 
  status = NF90_PUT_ATT(ncout,varid_mask_u,"coordinates","lat_u lon_u")
  call handle_err(status,202544)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"long_name","mask on V-points")
  call handle_err(status,202551)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"option_0","land")
  call handle_err(status,202552)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"option_1","water")
  call handle_err(status,202553) 
  status = NF90_PUT_ATT(ncout,varid_mask_v,"coordinates","lat_v lon_v")
  call handle_err(status,202554)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"long_name","mask on PSI-points")
  call handle_err(status,202561)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"option_0","land")
  call handle_err(status,202562)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"option_1","water")
  call handle_err(status,202563) 
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"coordinates","lat_psi lon_psi")
  call handle_err(status,202564)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"long_name","time since initialization")
  call handle_err(status,202571)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"units","seconds since 1982-01-01 00:00:00")
  call handle_err(status,202572)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"calendar","standard")
  call handle_err(status,202573) 
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"field","time, scalar, series")
  call handle_err(status,202574) 
  status = NF90_PUT_ATT(ncout,varid_zeta,"long_name","free-surface")
  call handle_err(status,202581)
  status = NF90_PUT_ATT(ncout,varid_zeta,"units","meter")
  call handle_err(status,202582)
  status = NF90_PUT_ATT(ncout,varid_zeta,"time","ocean_time")
  call handle_err(status,202583) 
  status = NF90_PUT_ATT(ncout,varid_zeta,"coordinates","lat_rho lon_rho")
  call handle_err(status,202584) 
  status = NF90_PUT_ATT(ncout,varid_zeta,"field","free-surface, scalar, series")
  call handle_err(status,202585) 
  status = NF90_PUT_ATT(ncout,varid_ubar,"long_name","vertically integrated u-momentum component")
  call handle_err(status,202591)
  status = NF90_PUT_ATT(ncout,varid_ubar,"units","meter second-1")
  call handle_err(status,202592)
  status = NF90_PUT_ATT(ncout,varid_ubar,"time","ocean_time")
  call handle_err(status,202593) 
  status = NF90_PUT_ATT(ncout,varid_ubar,"coordinates","lat_u lon_u")
  call handle_err(status,202594)
  status = NF90_PUT_ATT(ncout,varid_ubar,"field","ubar-velocity, scalar, series")
  call handle_err(status,202595)
  status = NF90_PUT_ATT(ncout,varid_vbar,"long_name","vertically integrated u-momentum component")
  call handle_err(status,202601)
  status = NF90_PUT_ATT(ncout,varid_vbar,"units","meter second-1")
  call handle_err(status,202602)
  status = NF90_PUT_ATT(ncout,varid_vbar,"time","ocean_time")
  call handle_err(status,202603)
  status = NF90_PUT_ATT(ncout,varid_vbar,"coordinates","lat_v lon_v")
  call handle_err(status,202604) 
  status = NF90_PUT_ATT(ncout,varid_vbar,"field","vbar-velocity, scalar, series")
  call handle_err(status,202605)
  status = NF90_PUT_ATT(ncout,varid_u,"long_name","u-momentum component")
  call handle_err(status,202611)
  status = NF90_PUT_ATT(ncout,varid_u,"units","meter second-1")
  call handle_err(status,202612)
  status = NF90_PUT_ATT(ncout,varid_u,"time","ocean_time")
  call handle_err(status,202613) 
  status = NF90_PUT_ATT(ncout,varid_u,"coordinates","lat_u lon_u")  
  call handle_err(status,202614)
  status = NF90_PUT_ATT(ncout,varid_u,"field","u-velocity, scalar, series")
  call handle_err(status,202615)
  status = NF90_PUT_ATT(ncout,varid_v,"long_name","v-momentum component")
  call handle_err(status,202621)
  status = NF90_PUT_ATT(ncout,varid_v,"units","meter second-1")
  call handle_err(status,202622)
  status = NF90_PUT_ATT(ncout,varid_v,"time","ocean_time")
  call handle_err(status,202623) 
  status = NF90_PUT_ATT(ncout,varid_v,"coordinates","lat_v lon_v") 
  call handle_err(status,202624)
  status = NF90_PUT_ATT(ncout,varid_v,"field","v-velocity, scalar, series")
  call handle_err(status,202625) 
  status = NF90_PUT_ATT(ncout,varid_temp,"long_name","potential temperature")
  call handle_err(status,202631)
  status = NF90_PUT_ATT(ncout,varid_temp,"units","Celsius")
  call handle_err(status,202632)
  status = NF90_PUT_ATT(ncout,varid_temp,"time","ocean_time")
  call handle_err(status,202633) 
  status = NF90_PUT_ATT(ncout,varid_temp,"coordinates","lat_rho lon_rho")
  call handle_err(status,202634) 
  status = NF90_PUT_ATT(ncout,varid_temp,"field","temperature, scalar, series")
  call handle_err(status,202635) 
  status = NF90_PUT_ATT(ncout,varid_salt,"long_name","salinity")
  call handle_err(status,202641)
  status = NF90_PUT_ATT(ncout,varid_salt,"units","PSU")
  call handle_err(status,202642)
  status = NF90_PUT_ATT(ncout,varid_salt,"time","ocean_time")
  call handle_err(status,202643) 
  status = NF90_PUT_ATT(ncout,varid_salt,"coordinates","lat_rho lon_rho")
  call handle_err(status,202644) 
  status = NF90_PUT_ATT(ncout,varid_salt,"field","salinity, scalar, series")
  call handle_err(status,202645)
!  status = NF90_PUT_ATT(ncout,varid_rho,"long_name","density anomaly")
!  call handle_err(status,202651)
!  status = NF90_PUT_ATT(ncout,varid_rho,"units","kilogram meter-3")
!  call handle_err(status,202652)
!  status = NF90_PUT_ATT(ncout,varid_rho,"time","ocean_time")
!  call handle_err(status,202653)
!  status = NF90_PUT_ATT(ncout,varid_rho,"coordinates","lat_rho lon_rho")
!  call handle_err(status,202654) 
!  status = NF90_PUT_ATT(ncout,varid_rho,"field","density, scalar, series")
!  call handle_err(status,202655)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"long_name","vertical viscosity coefficient")
!  call handle_err(status,202661)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"units","meter2 second-1")
!  call handle_err(status,202662)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"time","ocean_time")
!  call handle_err(status,202663) 
!  status = NF90_PUT_ATT(ncout,varid_AKv,"coordinates","lat_rho lon_rho")
!  call handle_err(status,202664) 
!  status = NF90_PUT_ATT(ncout,varid_AKv,"field","AKv, scalar, series")
!  call handle_err(status,202665) 
!  status = NF90_PUT_ATT(ncout,varid_AKt,"long_name","temperature vertical diffusion coefficient")
!  call handle_err(status,202671)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"units","meter2 second-1")
!  call handle_err(status,202672)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"time","ocean_time")
!  call handle_err(status,202673)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"coordinates","lat_rho lon_rho")
!  call handle_err(status,202674)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"field","AKt, scalar, series")
!  call handle_err(status,202675)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"long_name","salinity vertical diffusion coefficient")
!  call handle_err(status,202681)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"units","meter2 second-1")
!  call handle_err(status,202682)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"time","ocean_time")
!  call handle_err(status,202683)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"coordinates","lat_rho lon_rho")
!  call handle_err(status,202684)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"field","AKs, scalar, series")
!  call handle_err(status,202685) 
  
  ! End of definition
  status = NF90_ENDDEF(ncout)
  
  status = NF90_PUT_VAR(ncout,varid_ntimes,ntimesi)
  call handle_err(status,20301)
  status = NF90_PUT_VAR(ncout,varid_ndtfast,ndtfasti)
  call handle_err(status,20302)
  status = NF90_PUT_VAR(ncout,varid_dt,dti)
  call handle_err(status,20303)
  status = NF90_PUT_VAR(ncout,varid_dtfast,dtfasti)
  call handle_err(status,20304)
  status = NF90_PUT_VAR(ncout,varid_dstart,dstarti)
  call handle_err(status,20305)
  status = NF90_PUT_VAR(ncout,varid_nHIS,nHISi)
  call handle_err(status,20306)
  status = NF90_PUT_VAR(ncout,varid_ndefHIS,ndefHISi)
  call handle_err(status,20307)
  status = NF90_PUT_VAR(ncout,varid_nRST,nRSTi)
  call handle_err(status,20308)
  status = NF90_PUT_VAR(ncout,varid_ntsAVG,ntsAVGi)
  call handle_err(status,20309)
  status = NF90_PUT_VAR(ncout,varid_nAVG,nAVGi)
  call handle_err(status,20310)
  status = NF90_PUT_VAR(ncout,varid_ndefAVG,ndefAVGi)
  call handle_err(status,20311)
  status = NF90_PUT_VAR(ncout,varid_Falpha,Falphai)
  call handle_err(status,20312)
  status = NF90_PUT_VAR(ncout,varid_Fbeta,Fbetai)
  call handle_err(status,20313)
  status = NF90_PUT_VAR(ncout,varid_Fgamma,Fgammai)
  call handle_err(status,20314)
  status = NF90_PUT_VAR(ncout,varid_tnu2,tnu2i)
  call handle_err(status,20315)
  status = NF90_PUT_VAR(ncout,varid_visc2,visc2i)
  call handle_err(status,20316)
  status = NF90_PUT_VAR(ncout,varid_Akt_bak,Akt_baki)
  call handle_err(status,20317)
  status = NF90_PUT_VAR(ncout,varid_Akv_bak,Akv_baki)
  call handle_err(status,20318)
!if (t.LE.sch_ens)then  
!status = NF90_PUT_VAR(ncout,varid_Akk_bak,Akk_baki)
!  call handle_err(status,20319)
!  status = NF90_PUT_VAR(ncout,varid_Akp_bak,Akp_baki)
!  call handle_err(status,20320)
!endif

  status = NF90_PUT_VAR(ncout,varid_rdrg,rdrgi)
  call handle_err(status,20321)
  status = NF90_PUT_VAR(ncout,varid_rdrg2,rdrg2i)
  call handle_err(status,20322)
  status = NF90_PUT_VAR(ncout,varid_Zob,Zobi)
  call handle_err(status,20323)
  status = NF90_PUT_VAR(ncout,varid_Zos,Zosi)
  call handle_err(status,20324)
  status = NF90_PUT_VAR(ncout,varid_Znudg,Znudgi)
  call handle_err(status,20325)
  status = NF90_PUT_VAR(ncout,varid_M2nudg,M2nudgi)
  call handle_err(status,20326)
  status = NF90_PUT_VAR(ncout,varid_M3nudg,M3nudgi)
  call handle_err(status,20327)
  status = NF90_PUT_VAR(ncout,varid_Tnudg,Tnudgi)
  call handle_err(status,20328)
  status = NF90_PUT_VAR(ncout,varid_rho0,rho0i)
  call handle_err(status,20329)
  status = NF90_PUT_VAR(ncout,varid_gamma2,gamma2i)
  call handle_err(status,20330)
  status = NF90_PUT_VAR(ncout,varid_spherical,sphericali)
  call handle_err(status,20331)
  status = NF90_PUT_VAR(ncout,varid_xl,xli)
  call handle_err(status,20332)
  status = NF90_PUT_VAR(ncout,varid_el,eli)
  call handle_err(status,20333)
  status = NF90_PUT_VAR(ncout,varid_theta_s,theta_si)
  call handle_err(status,20334)
  status = NF90_PUT_VAR(ncout,varid_theta_b,theta_bi)
  call handle_err(status,20335)
  status = NF90_PUT_VAR(ncout,varid_Tcline,Tclinei)
  call handle_err(status,20336)
  status = NF90_PUT_VAR(ncout,varid_hc,hci)
  call handle_err(status,20337)
  status = NF90_PUT_VAR(ncout,varid_s_rho,s_rhoi)
  call handle_err(status,20338)
  status = NF90_PUT_VAR(ncout,varid_s_w,s_wi)
  call handle_err(status,20339)
  status = NF90_PUT_VAR(ncout,varid_Cs_r,Cs_ri)
  call handle_err(status,20340)
  status = NF90_PUT_VAR(ncout,varid_Cs_w,Cs_wi)
  call handle_err(status,20341)
  status = NF90_PUT_VAR(ncout,varid_h,hi)
  call handle_err(status,20342)
  status = NF90_PUT_VAR(ncout,varid_f,fi)
  call handle_err(status,20343)
  status = NF90_PUT_VAR(ncout,varid_pm,pmi)
  call handle_err(status,20344)
  status = NF90_PUT_VAR(ncout,varid_pn,pni)
  call handle_err(status,20345)
  status = NF90_PUT_VAR(ncout,varid_lon_rho,lon_rhoi)
  call handle_err(status,20346)
  status = NF90_PUT_VAR(ncout,varid_lat_rho,lat_rhoi)
  call handle_err(status,20347)
  status = NF90_PUT_VAR(ncout,varid_lon_u,lon_ui)
  call handle_err(status,20348)
  status = NF90_PUT_VAR(ncout,varid_lat_u,lat_ui)
  call handle_err(status,20349)
  status = NF90_PUT_VAR(ncout,varid_lon_v,lon_vi)
  call handle_err(status,20350)
  status = NF90_PUT_VAR(ncout,varid_lat_v,lat_vi)
  call handle_err(status,20351)
  status = NF90_PUT_VAR(ncout,varid_lon_psi,lon_psii)
  call handle_err(status,20352)
  status = NF90_PUT_VAR(ncout,varid_lat_psi,lat_psii)
  call handle_err(status,20353)
  status = NF90_PUT_VAR(ncout,varid_angle,anglei)
  call handle_err(status,20354)
  status = NF90_PUT_VAR(ncout,varid_mask_rho,mask_rhoi)
  call handle_err(status,20355)
  status = NF90_PUT_VAR(ncout,varid_mask_u,mask_ui)
  call handle_err(status,20356)
  status = NF90_PUT_VAR(ncout,varid_mask_v,mask_vi)
  call handle_err(status,20357)
  status = NF90_PUT_VAR(ncout,varid_mask_psi,mask_psii)
  call handle_err(status,20358)
  status = NF90_PUT_VAR(ncout,varid_ocean_time,ocean_timei)
  call handle_err(status,20359)
  status = NF90_PUT_VAR(ncout,varid_zeta,zetai)
  call handle_err(status,20360)
  status = NF90_PUT_VAR(ncout,varid_ubar,ubari)
  call handle_err(status,20361)
  status = NF90_PUT_VAR(ncout,varid_vbar,vbari)
  call handle_err(status,20362)
  status = NF90_PUT_VAR(ncout,varid_u,ui)
  call handle_err(status,20363)
  status = NF90_PUT_VAR(ncout,varid_v,vi)
  call handle_err(status,20364)
  status = NF90_PUT_VAR(ncout,varid_temp,tempi)
  call handle_err(status,20365)
  status = NF90_PUT_VAR(ncout,varid_salt,salti)
  call handle_err(status,20366)
!  status = NF90_PUT_VAR(ncout,varid_rho,rhoi)
!  call handle_err(status,20367)
!  status = NF90_PUT_VAR(ncout,varid_AKv,AKvi)
!  call handle_err(status,20368)
!  status = NF90_PUT_VAR(ncout,varid_AKt,AKti)
!  call handle_err(status,20369)
!  status = NF90_PUT_VAR(ncout,varid_AKs,AKsi)
!  call handle_err(status,20370)
  
  status = NF90_CLOSE(ncout)
  call handle_err(status,29999)
 ! write(*,*) 'ncout_d'
!enddo
! write(*,*) 'n1'
!deallocate(hi,fi,pmi,pni)
! write(*,*) 'n2'
!deallocate(lon_rhoi,lat_rhoi)
! write(*,*) 'n3'
!deallocate(lon_ui,lat_ui)
! write(*,*) 'n4'
!deallocate(lon_vi,lat_vi)
! write(*,*) 'n5'
!deallocate(lon_psii,lat_psii,anglei,mask_rhoi,mask_ui,mask_vi,mask_psii)
! write(*,*) 'n6'
!deallocate(zetai,ubari,vbari,ui,vi,tempi,salti,rhoi,AKvi,AKti,AKsi)
! write(*,*) 'n7'
end subroutine save_dummy



