!======================================================
! Save Analysis from Ensemble Kalman Filter
! Programmed by Y.H. KIM in Apri., 2006
! Modified for new version by G.-D. Pak in Jul. 2012 
! mailto:yhkim@kordi.re.kr
! mailto:gdpak@curl.snu.ac.kr
! Note : To prepare the Ensemble Kalman Filter
!======================================================

 subroutine save_anal(loop,param_all)

 use netcdf
 use background, only : len_xi_rho,len_eta_rho,len_xi_u &
                           ,len_eta_u,len_xi_v,len_eta_v,len_s_rho &
                           ,cs_w,hdepth,iu,iv,izeta,itemp,isalt,len_s_w &
                           ,mask_rho,mask_u,mask_v
 use kalman, only : pdomain,num_idomain,sch_ens,T_IO

 implicit none

 character(10)      :: var_name

 character(100)      :: enafile,bg_file,outfile,ttext,new_outfile

 integer,intent(in) :: loop
 integer            :: ewr,nsr,ewu,nsv
 integer            :: i,j,k,t,status,ii,jj,tt
 integer            :: ncout
 integer            :: dim_ocean_time
 !integer            :: varid_ocean_time, varid_zeta, varid_ubar, varid_vbar
 !integer            :: varid_u, varid_v, varid_temp,varid_salt
 integer            :: len_ocean_time
 !real(kind=8),dimension(:) :: ocean_time
 !real(kind=8),allocatable,dimension(:,:,:)  :: zeta_r,ubar_r,vbar_r
 !real(kind=8),allocatable,dimension(:,:,:,:)  :: u_r,v_r,temp_r,salt_r
 !real(kind=8) :: tu,tv,dh_rho,hdepth_u,hdepth_v
 
  integer            :: dim_xi_rho,dim_xi_u,dim_xi_v,dim_xi_psi,dim_eta_rho,dim_eta_u,dim_eta_v,dim_eta_psi
  integer            :: dim_one,dim_two 
  integer            :: dim_s_rho,dim_s_w,ncin
  integer            :: varid_ntimes,varid_ndtfast,varid_dt,varid_dtfast,varid_dstart
  integer            :: varid_nHIS,varid_ndefHIS,varid_nRST,varid_ntsAVG,varid_nAVG
  integer            :: varid_ndefAVG,varid_Falpha,varid_Fbeta,varid_Fgamma,varid_tnu2
  integer            :: varid_visc2,varid_Akt_bak,varid_Akv_bak,varid_Akk_bak
  integer            :: varid_Akp_bak,varid_rdrg,varid_rdrg2,varid_Zob,varid_Zos
  integer            :: varid_Znudg,varid_M2nudg,varid_M3nudg,varid_Tnudg,varid_rho0
  integer            :: varid_gamma2,varid_spherical,varid_xl,varid_el,varid_theta_s
  integer            :: varid_theta_b,varid_Tcline,varid_hc,varid_s_rho,varid_s_w
  integer            :: varid_Cs_r,varid_Cs_w,varid_h,varid_f,varid_pm,varid_pn
  integer            :: varid_lon_rho,varid_lat_rho,varid_lon_u,varid_lat_u
  integer            :: varid_lon_v,varid_lat_v,varid_lon_psi,varid_lat_psi,varid_angle
  integer            :: varid_mask_rho,varid_mask_u,varid_mask_v,varid_mask_psi
  integer            :: varid_ocean_time,varid_zeta,varid_ubar,varid_vbar
  integer            :: varid_u,varid_v,varid_temp,varid_salt,varid_rho
  integer            :: varid_AKv,varid_AKt,varid_AKs
  
  integer            :: ntimesi,ndtfasti,nHISi,ndefHISi,nRSTi,ntsAVGi,nAVGi,ndefAVGi
! character          :: sphericali
  integer            :: sphericali
  real(8)            :: dti,dtfasti,dstarti,Falphai,Fbetai,Fgammai,visc2i,Akv_baki,Akk_baki
  real(8)            :: Akp_baki,rdrgi,rdrg2i,Zobi,Zosi,Znudgi,M2nudgi,M3nudgi,rho0i
  real(8)            :: gamma2i,xli,eli,theta_si,theta_bi,Tclinei,hci,ocean_timei
  real(8)            :: tnu2i(2),Akt_baki(2),Tnudgi(2),s_rhoi(len_s_rho),s_wi(len_s_w)
  real(8)            :: Cs_ri(len_s_rho),Cs_wi(len_s_w)
  real(8),allocatable,dimension(:,:) :: hi,fi,pmi,pni,lon_rhoi,lat_rhoi
  real(8),allocatable,dimension(:,:) :: lon_ui,lat_ui,lon_vi,lat_vi,lon_psii,lat_psii
  real(8),allocatable,dimension(:,:) :: anglei,mask_rhoi,mask_ui,mask_vi,mask_psii
  real(8),allocatable,dimension(:,:,:) :: rhoi,AKvi,AKti,AKsi
 
 real(kind=8),allocatable,dimension(:,:,:) :: zeta_r, zeta_st
 real(kind=8),allocatable,dimension(:,:,:) :: ubar_r, ubar_st
 real(kind=8),allocatable,dimension(:,:,:) :: vbar_r, vbar_st
 real(kind=8),allocatable,dimension(:,:,:,:) :: temp_r, salt_r, temp_st, salt_st
 real(kind=8),allocatable,dimension(:,:,:,:) :: u_r, u_st
 real(kind=8),allocatable,dimension(:,:,:,:) :: v_r, v_st
 real(kind=8) :: tu,tv,dh_rho,hdepth_u,hdepth_v,ocean_time
 TYPE(T_IO), intent(inout) :: param_all ! added by Y-Y. Kim

 ewr = pdomain(loop)%east-pdomain(loop)%west+1
 nsr = pdomain(loop)%north-pdomain(loop)%south+1
 ewu = pdomain(loop)%eastu-pdomain(loop)%west+1
 nsv = pdomain(loop)%northv-pdomain(loop)%south+1
!print *, "ewr, nsr, ewu, nsv =",ewr,nsr,ewu,nsv
! allocate(zeta_r(ewr,nsr,Nens), &
!          ubar_r(ewu,nsr,Nens), &
!          vbar_r(ewr,nsv,Nens), &
!          u_r(ewu,nsr,len_s_rho,Nens), &
!          v_r(ewr,nsv,len_s_rho,Nens), &
!          temp_r(ewr,nsr,len_s_rho,Nens),&
!          salt_r(ewr,nsr,len_s_rho,Nens))
 allocate(zeta_r(ewr,nsr,1), &
          ubar_r(ewu,nsr,1), &
          vbar_r(ewr,nsv,1), &
          u_r(ewu,nsr,len_s_rho,1), &
          v_r(ewr,nsv,len_s_rho,1), &
          temp_r(ewr,nsr,len_s_rho,1),&
          salt_r(ewr,nsr,len_s_rho,1))

! allocate(zeta_st(ewr,nsr), &
!          ubar_st(ewu,nsr), &
!          vbar_st(ewr,nsv), &
!          u_st(ewu,nsr,len_s_rho), &
!          v_st(ewr,nsv,len_s_rho), &
!          temp_st(ewr,nsr,len_s_rho),&
!          salt_st(ewr,nsr,len_s_rho))
         
allocate(hi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),fi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1))
allocate(pmi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),pni(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1))
allocate(lon_rhoi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),lat_rhoi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1))
allocate(lon_ui(pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),lat_ui(pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1))
allocate(lon_vi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1),lat_vi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1))
allocate(lon_psii(pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1),lat_psii(pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1))
allocate(anglei(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),mask_rhoi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1))
allocate(mask_ui(pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1),mask_vi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1))
allocate(mask_psii(pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1))
allocate(rhoi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_rho))
allocate(AKvi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w),AKti(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w))
allocate(AKsi(pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w))
 
zeta_r=0.0
u_r=0.0
temp_r=0.0
salt_r=0.0
v_r=0.0

!do t=1,Nens
t=1
tt=param_all%Nens
  do i=1,pdomain(loop)%Nsta
   if(pdomain(loop)%index_back(i,1)==izeta) then
    zeta_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,t) = pdomain(loop)%old_ens(i,tt)
!   zeta_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,t) = pdomain(loop)%old_ens(i,t)
   else if(pdomain(loop)%index_back(i,1)==itemp) then
!   temp_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,t)
    temp_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,tt)
   else if(pdomain(loop)%index_back(i,1)==isalt) then
!   salt_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,t)
    salt_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,tt)
   else if(pdomain(loop)%index_back(i,1)==iu) then
!   u_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,t)
    u_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,tt)
   else if(pdomain(loop)%index_back(i,1)==iv) then
!   v_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,t)
    v_r(pdomain(loop)%index_back(i,2)-pdomain(loop)%west+1,pdomain(loop)%index_back(i,3)-pdomain(loop)%south+1,pdomain(loop)%index_back(i,4),t)=pdomain(loop)%old_ens(i,tt)
   endif  
  enddo
  
  ubar_r=0.0
  do i=pdomain(loop)%west,pdomain(loop)%eastu
   do j=pdomain(loop)%south,pdomain(loop)%north
      ii=i-pdomain(loop)%west+1
      jj=j-pdomain(loop)%south+1
   if (mask_u(i,j).eq.1) then
      tu = 0.0
!      ii=i-pdomain(loop)%west+1   !kimyy
!      jj=j-pdomain(loop)%south+1
!     hdepth_u = (zeta_r(ii,jj,tt)+zeta_r(ii+1,jj,tt))/2.0+(hdepth(i,j)+hdepth(i+1,j))/2.0
      hdepth_u = (zeta_r(ii,jj,t)+zeta_r(ii+1,jj,t))/2.0+(hdepth(i,j)+hdepth(i+1,j))/2.0
      do k=1,len_s_rho
       dh_rho = (cs_w(k+1)-cs_w(k))*hdepth_u
!      tu = tu+u_r(ii,jj,k,tt)*dh_rho
       tu = tu+u_r(ii,jj,k,t)*dh_rho
      enddo
!     ubar_r(ii,jj,tt) = tu/hdepth_u
      ubar_r(ii,jj,t) = tu/hdepth_u
    else
      do k=1,len_s_rho
!print *,'u_r(',ii,',',jj,',',k,',',t,')=', u_r(ii,jj,k,t)
!       u_r(ii,jj,k,t)=0.0
!print *, 'kimyy - 2'
!       u_r(ii,jj,k,tt)=0.0
      enddo
    endif
   enddo
  enddo

  vbar_r=0.0
  do i=pdomain(loop)%west,pdomain(loop)%east
   do j=pdomain(loop)%south,pdomain(loop)%northv
      ii=i-pdomain(loop)%west+1
      jj=j-pdomain(loop)%south+1
   if (mask_v(i,j).eq.1) then
      tv = 0.0
!     ii=i-pdomain(loop)%west+1
!     jj=j-pdomain(loop)%south+1
!     hdepth_v = (zeta_r(ii,jj,tt)+zeta_r(ii,jj+1,tt))/2.0+(hdepth(i,j)+hdepth(i,j+1))/2.0
      hdepth_v = (zeta_r(ii,jj,t)+zeta_r(ii,jj+1,t))/2.0+(hdepth(i,j)+hdepth(i,j+1))/2.0
      do k=1,len_s_rho
       dh_rho = (cs_w(k+1)-cs_w(k))*hdepth_v
!      tv = tv+v_r(ii,jj,k,tt)*dh_rho
       tv = tv+v_r(ii,jj,k,t)*dh_rho
      enddo
!     vbar_r(ii,jj,tt) = tv/hdepth_v
      vbar_r(ii,jj,t) = tv/hdepth_v
    else
      do k=1,len_s_rho
!       v_r(ii,jj,k,tt)=0.0
!       v_r(ii,jj,k,t)=0.0
      enddo
    endif
   enddo
  enddo

ocean_time = t

  write(ttext,'(I2.2)') t
  outfile=trim(param_all%outname)
!  outfile='/HDD1/kimyy/reanalysis_data/output/exp01/ocean_rst_out.nc'
! outfile='ocean_rst_ens'
! outfile=trim(outfile)//trim(ttext)//'_out.nc'
  
  ! Read old NC File
  status = NF90_OPEN(outfile,NF90_NOWRITE,ncin)
  call handle_err(status,0)
  
  ! Inquire variables
  status = NF90_INQ_VARID(ncin,"ntimes",varid_ntimes)
  call handle_err(status,1)
  status = NF90_INQ_VARID(ncin,"ndtfast",varid_ndtfast)
  call handle_err(status,2)
  status = NF90_INQ_VARID(ncin,"dt",varid_dt)
  call handle_err(status,3)
  status = NF90_INQ_VARID(ncin,"dtfast",varid_dtfast)
  call handle_err(status,4)
  status = NF90_INQ_VARID(ncin,"dstart",varid_dstart)
  call handle_err(status,5)
  status = NF90_INQ_VARID(ncin,"nHIS",varid_nHIS)
  call handle_err(status,6)
  status = NF90_INQ_VARID(ncin,"ndefHIS",varid_ndefHIS)
  call handle_err(status,7)
  status = NF90_INQ_VARID(ncin,"nRST",varid_nRST)
  call handle_err(status,8)
  status = NF90_INQ_VARID(ncin,"ntsAVG",varid_ntsAVG)
  call handle_err(status,9)
  status = NF90_INQ_VARID(ncin,"nAVG",varid_nAVG)
  call handle_err(status,10)
  status = NF90_INQ_VARID(ncin,"ndefAVG",varid_ndefAVG)
  call handle_err(status,11)
  status = NF90_INQ_VARID(ncin,"Falpha",varid_Falpha)
  call handle_err(status,12)
  status = NF90_INQ_VARID(ncin,"Fbeta",varid_Fbeta)
  call handle_err(status,13)
  status = NF90_INQ_VARID(ncin,"Fgamma",varid_Fgamma)
  call handle_err(status,14)
  status = NF90_INQ_VARID(ncin,"nl_tnu2",varid_tnu2)
  call handle_err(status,15)
  status = NF90_INQ_VARID(ncin,"nl_visc2",varid_visc2)
  call handle_err(status,16)
  status = NF90_INQ_VARID(ncin,"Akt_bak",varid_Akt_bak)
  call handle_err(status,17)
  status = NF90_INQ_VARID(ncin,"Akv_bak",varid_Akv_bak)
  call handle_err(status,18)
!if (t .LE. sch_ens) then
!  status = NF90_INQ_VARID(ncin,"Akk_bak",varid_Akk_bak)
!  call handle_err(status,19)
!  status = NF90_INQ_VARID(ncin,"Akp_bak",varid_Akp_bak)
!  call handle_err(status,20)
!endif
  status = NF90_INQ_VARID(ncin,"rdrg",varid_rdrg)
  call handle_err(status,21)
  status = NF90_INQ_VARID(ncin,"rdrg2",varid_rdrg2)
  call handle_err(status,22)
  status = NF90_INQ_VARID(ncin,"Zob",varid_Zob)
  call handle_err(status,23)
  status = NF90_INQ_VARID(ncin,"Zos",varid_Zos)
  call handle_err(status,24)
  status = NF90_INQ_VARID(ncin,"Znudg",varid_Znudg)
  call handle_err(status,25)
  status = NF90_INQ_VARID(ncin,"M2nudg",varid_M2nudg)
  call handle_err(status,26)
  status = NF90_INQ_VARID(ncin,"M3nudg",varid_M3nudg)
  call handle_err(status,27)
  status = NF90_INQ_VARID(ncin,"Tnudg",varid_Tnudg)
  call handle_err(status,28)
  status = NF90_INQ_VARID(ncin,"rho0",varid_rho0)
  call handle_err(status,29)
  status = NF90_INQ_VARID(ncin,"gamma2",varid_gamma2)
  call handle_err(status,30)
  status = NF90_INQ_VARID(ncin,"spherical",varid_spherical)
  call handle_err(status,31)
  status = NF90_INQ_VARID(ncin,"xl",varid_xl)
  call handle_err(status,32)
  status = NF90_INQ_VARID(ncin,"el",varid_el)
  call handle_err(status,33)
  status = NF90_INQ_VARID(ncin,"theta_s",varid_theta_s)
  call handle_err(status,34)
  status = NF90_INQ_VARID(ncin,"theta_b",varid_theta_b)
  call handle_err(status,35)
  status = NF90_INQ_VARID(ncin,"Tcline",varid_Tcline)
  call handle_err(status,36)
  status = NF90_INQ_VARID(ncin,"hc",varid_hc)
  call handle_err(status,37)
  status = NF90_INQ_VARID(ncin,"s_rho",varid_s_rho)
  call handle_err(status,38)
  status = NF90_INQ_VARID(ncin,"s_w",varid_s_w)
  call handle_err(status,39)
  status = NF90_INQ_VARID(ncin,"Cs_r",varid_Cs_r)
  call handle_err(status,40)
  status = NF90_INQ_VARID(ncin,"Cs_w",varid_Cs_w)
  call handle_err(status,41)
  status = NF90_INQ_VARID(ncin,"h",varid_h)
  call handle_err(status,42)
  status = NF90_INQ_VARID(ncin,"f",varid_f)
  call handle_err(status,43)
  status = NF90_INQ_VARID(ncin,"pm",varid_pm)
  call handle_err(status,44)
  status = NF90_INQ_VARID(ncin,"pn",varid_pn)
  call handle_err(status,45)
  status = NF90_INQ_VARID(ncin,"lon_rho",varid_lon_rho)
  call handle_err(status,46)
  status = NF90_INQ_VARID(ncin,"lat_rho",varid_lat_rho)
  call handle_err(status,47)
  status = NF90_INQ_VARID(ncin,"lon_u",varid_lon_u)
  call handle_err(status,48)
  status = NF90_INQ_VARID(ncin,"lat_u",varid_lat_u)
  call handle_err(status,49)
  status = NF90_INQ_VARID(ncin,"lon_v",varid_lon_v)
  call handle_err(status,50)
  status = NF90_INQ_VARID(ncin,"lat_v",varid_lat_v)
  call handle_err(status,51)
  status = NF90_INQ_VARID(ncin,"lon_psi",varid_lon_psi)
  call handle_err(status,52)
  status = NF90_INQ_VARID(ncin,"lat_psi",varid_lat_psi)
  call handle_err(status,53)
  status = NF90_INQ_VARID(ncin,"angle",varid_angle)
  call handle_err(status,54)
  status = NF90_INQ_VARID(ncin,"mask_rho",varid_mask_rho)
  call handle_err(status,55)
  status = NF90_INQ_VARID(ncin,"mask_u",varid_mask_u)
  call handle_err(status,56)
  status = NF90_INQ_VARID(ncin,"mask_v",varid_mask_v)
  call handle_err(status,57)
  status = NF90_INQ_VARID(ncin,"mask_psi",varid_mask_psi)
  call handle_err(status,58)
  status = NF90_INQ_VARID(ncin,"ocean_time",varid_ocean_time)
  call handle_err(status,59)
  status = NF90_INQ_VARID(ncin,"zeta",varid_zeta)
  call handle_err(status,60)
  status = NF90_INQ_VARID(ncin,"ubar",varid_ubar)
  call handle_err(status,61)
  status = NF90_INQ_VARID(ncin,"vbar",varid_vbar)
  call handle_err(status,62)
  status = NF90_INQ_VARID(ncin,"u",varid_u)
  call handle_err(status,63)
  status = NF90_INQ_VARID(ncin,"v",varid_v)
  call handle_err(status,64)
  status = NF90_INQ_VARID(ncin,"temp",varid_temp)
  call handle_err(status,65)
  status = NF90_INQ_VARID(ncin,"salt",varid_salt)
  call handle_err(status,66)
!  status = NF90_INQ_VARID(ncin,"rho",varid_rho)
!  call handle_err(status,67)
!  status = NF90_INQ_VARID(ncin,"AKv",varid_AKv)
!  call handle_err(status,68)
!  status = NF90_INQ_VARID(ncin,"AKt",varid_AKt)
!  call handle_err(status,69)
!  status = NF90_INQ_VARID(ncin,"AKs",varid_AKs)
!  call handle_err(status,70)
  
  ! Get vars
  status = NF90_GET_VAR(ncin,varid_ntimes,ntimesi)
  call handle_err(status,101)
  status = NF90_GET_VAR(ncin,varid_ndtfast,ndtfasti)
  call handle_err(status,102)
  status = NF90_GET_VAR(ncin,varid_dt,dti)
  call handle_err(status,103)
  status = NF90_GET_VAR(ncin,varid_dtfast,dtfasti)
  call handle_err(status,104)
  status = NF90_GET_VAR(ncin,varid_dstart,dstarti)
  call handle_err(status,105)
  status = NF90_GET_VAR(ncin,varid_nHIS,nHISi)
  call handle_err(status,106)
  status = NF90_GET_VAR(ncin,varid_ndefHIS,ndefHISi)
  call handle_err(status,107)
  status = NF90_GET_VAR(ncin,varid_nRST,nRSTi)
  call handle_err(status,108)
  status = NF90_GET_VAR(ncin,varid_ntsAVG,ntsAVGi)
  call handle_err(status,109)
  status = NF90_GET_VAR(ncin,varid_nAVG,nAVGi)
  call handle_err(status,110)
  status = NF90_GET_VAR(ncin,varid_ndefAVG,ndefAVGi)
  call handle_err(status,111)
  status = NF90_GET_VAR(ncin,varid_Falpha,Falphai)
  call handle_err(status,112)
  status = NF90_GET_VAR(ncin,varid_Fbeta,Fbetai)
  call handle_err(status,113)
  status = NF90_GET_VAR(ncin,varid_Fgamma,Fgammai)
  call handle_err(status,114)
  status = NF90_GET_VAR(ncin,varid_tnu2,tnu2i)
  call handle_err(status,115)
  status = NF90_GET_VAR(ncin,varid_visc2,visc2i)
  call handle_err(status,116)
  status = NF90_GET_VAR(ncin,varid_Akt_bak,Akt_baki)
  call handle_err(status,117)
  status = NF90_GET_VAR(ncin,varid_Akv_bak,Akv_baki)
  call handle_err(status,118)
!if (t.LE.sch_ens) then  
!status = NF90_GET_VAR(ncin,varid_Akk_bak,Akk_baki)
!  call handle_err(status,119)
!  status = NF90_GET_VAR(ncin,varid_Akp_bak,Akp_baki)
!  call handle_err(status,120)
!endif
  status = NF90_GET_VAR(ncin,varid_rdrg,rdrgi)
  call handle_err(status,121)
  status = NF90_GET_VAR(ncin,varid_rdrg2,rdrg2i)
  call handle_err(status,122)
  status = NF90_GET_VAR(ncin,varid_Zob,Zobi)
  call handle_err(status,123)
  status = NF90_GET_VAR(ncin,varid_Zos,Zosi)
  call handle_err(status,124)
  status = NF90_GET_VAR(ncin,varid_Znudg,Znudgi)
  call handle_err(status,125)
  status = NF90_GET_VAR(ncin,varid_M2nudg,M2nudgi)
  call handle_err(status,126)
  status = NF90_GET_VAR(ncin,varid_M3nudg,M3nudgi)
  call handle_err(status,127)
  status = NF90_GET_VAR(ncin,varid_Tnudg,Tnudgi)
  call handle_err(status,128)
  status = NF90_GET_VAR(ncin,varid_rho0,rho0i)
  call handle_err(status,129)
  status = NF90_GET_VAR(ncin,varid_gamma2,gamma2i)
  call handle_err(status,130)
  status = NF90_GET_VAR(ncin,varid_spherical,sphericali)
  call handle_err(status,131)
  status = NF90_GET_VAR(ncin,varid_xl,xli)
  call handle_err(status,132)
  status = NF90_GET_VAR(ncin,varid_el,eli)
  call handle_err(status,133)
  status = NF90_GET_VAR(ncin,varid_theta_s,theta_si)
  call handle_err(status,134)
  status = NF90_GET_VAR(ncin,varid_theta_b,theta_bi)
  call handle_err(status,135)
  status = NF90_GET_VAR(ncin,varid_Tcline,Tclinei)
  call handle_err(status,136)
  status = NF90_GET_VAR(ncin,varid_hc,hci)
  call handle_err(status,137)
  status = NF90_GET_VAR(ncin,varid_s_rho,s_rhoi)
  call handle_err(status,138)
  status = NF90_GET_VAR(ncin,varid_s_w,s_wi)
  call handle_err(status,139)
  status = NF90_GET_VAR(ncin,varid_Cs_r,Cs_ri)
  call handle_err(status,140)
  status = NF90_GET_VAR(ncin,varid_Cs_w,Cs_wi)
  call handle_err(status,141)
  status = NF90_GET_VAR(ncin,varid_h,hi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,142)
  status = NF90_GET_VAR(ncin,varid_f,fi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,143)
  status = NF90_GET_VAR(ncin,varid_pm,pmi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,144)
  status = NF90_GET_VAR(ncin,varid_pn,pni,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,145)
  status = NF90_GET_VAR(ncin,varid_lon_rho,lon_rhoi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,146)
  status = NF90_GET_VAR(ncin,varid_lat_rho,lat_rhoi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,147)
  status = NF90_GET_VAR(ncin,varid_lon_u,lon_ui,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,148)
  status = NF90_GET_VAR(ncin,varid_lat_u,lat_ui,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,149)
  status = NF90_GET_VAR(ncin,varid_lon_v,lon_vi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1/))
  call handle_err(status,150)
  status = NF90_GET_VAR(ncin,varid_lat_v,lat_vi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1/))
  call handle_err(status,151)
  status = NF90_GET_VAR(ncin,varid_lon_psi,lon_psii,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1/))
  call handle_err(status,152)
  status = NF90_GET_VAR(ncin,varid_lat_psi,lat_psii,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1/))
  call handle_err(status,153)
  status = NF90_GET_VAR(ncin,varid_angle,anglei,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,154)
  status = NF90_GET_VAR(ncin,varid_mask_rho,mask_rhoi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,155)
  status = NF90_GET_VAR(ncin,varid_mask_u,mask_ui,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastu-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1/))
  call handle_err(status,156)
  status = NF90_GET_VAR(ncin,varid_mask_v,mask_vi,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%northv-pdomain(loop)%south+1/))
  call handle_err(status,157)
  status = NF90_GET_VAR(ncin,varid_mask_psi,mask_psii,start=(/pdomain(loop)%west,pdomain(loop)%south/),count=(/pdomain(loop)%eastp-pdomain(loop)%west+1,pdomain(loop)%northp-pdomain(loop)%south+1/))
  call handle_err(status,158)
 status = NF90_GET_VAR(ncin,varid_ocean_time,ocean_timei)
 call handle_err(status,159)
!  status = NF90_GET_VAR(ncin,varid_rho,rhoi,start=(/pdomain(loop)%west,pdomain(loop)%south,1/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_rho/))
!  call handle_err(status,160)
!  status = NF90_GET_VAR(ncin,varid_AKv,AKvi,start=(/pdomain(loop)%west,pdomain(loop)%south,1/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w/))
!  call handle_err(status,161)
!  status = NF90_GET_VAR(ncin,varid_AKt,AKti,start=(/pdomain(loop)%west,pdomain(loop)%south,1/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w/))
!  call handle_err(status,162)
!  status = NF90_GET_VAR(ncin,varid_AKs,AKsi,start=(/pdomain(loop)%west,pdomain(loop)%south,1/),count=(/pdomain(loop)%east-pdomain(loop)%west+1,pdomain(loop)%north-pdomain(loop)%south+1,len_s_w/))
!  call handle_err(status,163)
  
  status = NF90_CLOSE(ncin)
  call handle_err(status,-1)
! new_outfile='./result/ocean_rst_ens'
! new_outfile='/scratch/kosu02/roms_output/EnOI_MPI/result/ocean_rst_in.nc'
!  new_outfile='/HDD1/kimyy/reanalysis_data/output/exp01/result/ocean_rst_in'
  new_outfile=trim(param_all%inname_piece_path)//'/ocean_rst_in'
! new_outfile=trim(new_outfile)//trim(ttext)//'_in.nc'
  write(ttext,'(I4.4)') pdomain(loop)%ndomain-1
! new_outfile=trim(new_outfile)//'.'//trim(ttext)
  new_outfile=trim(new_outfile)//'_'//trim(ttext)//'.nc'
  !if (t.eq.1) then
!     write(*,*) trim(new_outfile)   
!print *, "new_outfile =", new_outfile
  !endif 
!call copy_nc(bg_file,outfile)
! ocean_timei = 1 ! kimyy
  ! Create NC File
  status = NF90_CREATE(new_outfile,NF90_CLOBBER,ncout)
  call handle_err(status,50000)

  ! Define dimensions 
  status = NF90_DEF_DIM(ncout,"xi_rho",pdomain(loop)%east-pdomain(loop)%west+1,dim_xi_rho)
  call handle_err(status,50001)
  status = NF90_DEF_DIM(ncout,"xi_u",pdomain(loop)%eastu-pdomain(loop)%west+1,dim_xi_u)
  call handle_err(status,50002)
  status = NF90_DEF_DIM(ncout,"xi_v",pdomain(loop)%east-pdomain(loop)%west+1,dim_xi_v)
  call handle_err(status,50003)
  status = NF90_DEF_DIM(ncout,"xi_psi",pdomain(loop)%eastp-pdomain(loop)%west+1,dim_xi_psi)
  call handle_err(status,50004)
  status = NF90_DEF_DIM(ncout,"eta_rho",pdomain(loop)%north-pdomain(loop)%south+1,dim_eta_rho)
  call handle_err(status,50005)
  status = NF90_DEF_DIM(ncout,"eta_u",pdomain(loop)%north-pdomain(loop)%south+1,dim_eta_u)
  call handle_err(status,50006)
  status = NF90_DEF_DIM(ncout,"eta_v",pdomain(loop)%northv-pdomain(loop)%south+1,dim_eta_v)
  call handle_err(status,50007)
  status = NF90_DEF_DIM(ncout,"eta_psi",pdomain(loop)%northp-pdomain(loop)%south+1,dim_eta_psi)
  call handle_err(status,50008)
  status = NF90_DEF_DIM(ncout,"s_rho",len_s_rho,dim_s_rho)
  call handle_err(status,50009)
  status = NF90_DEF_DIM(ncout,"s_w",len_s_w,dim_s_w)
  call handle_err(status,50010)
  status = NF90_DEF_DIM(ncout,"one",1,dim_one)
  call handle_err(status,50011)
  status = NF90_DEF_DIM(ncout,"two",2,dim_two)
  call handle_err(status,50012)
  status = NF90_DEF_DIM(ncout,"ocean_time",1,dim_ocean_time)
! status = NF90_DEF_DIM(ncout,"ocean_time",nf90_unlimited,dim_ocean_time)!kimyy
  call handle_err(status,50013)
  
  ! Define variables
  status = NF90_DEF_VAR(ncout,"ntimes",NF90_INT,dim_one,varid_ntimes)
  call handle_err(status,50101)
  status = NF90_DEF_VAR(ncout,"ndtfast",NF90_INT,dim_one,varid_ndtfast)
  call handle_err(status,50102)
  status = NF90_DEF_VAR(ncout,"dt",NF90_DOUBLE,dim_one,varid_dt)
  call handle_err(status,50103)
  status = NF90_DEF_VAR(ncout,"dtfast",NF90_DOUBLE,dim_one,varid_dtfast)
  call handle_err(status,50104)
  status = NF90_DEF_VAR(ncout,"dstart",NF90_DOUBLE,dim_one,varid_dstart)
  call handle_err(status,50105)
  status = NF90_DEF_VAR(ncout,"nHIS",NF90_INT,dim_one,varid_nHIS)
  call handle_err(status,50106)
  status = NF90_DEF_VAR(ncout,"ndefHIS",NF90_INT,dim_one,varid_ndefHIS)
  call handle_err(status,50107)
  status = NF90_DEF_VAR(ncout,"nRST",NF90_INT,dim_one,varid_nRST)
  call handle_err(status,50108)
  status = NF90_DEF_VAR(ncout,"ntsAVG",NF90_INT,dim_one,varid_ntsAVG)
  call handle_err(status,50109)
  status = NF90_DEF_VAR(ncout,"ndefAVG",NF90_INT,dim_one,varid_ndefAVG)
  call handle_err(status,50110)
  status = NF90_DEF_VAR(ncout,"Falpha",NF90_DOUBLE,dim_one,varid_Falpha)
  call handle_err(status,50111)
  status = NF90_DEF_VAR(ncout,"Fbeta",NF90_DOUBLE,dim_one,varid_Fbeta)
  call handle_err(status,50112)
  status = NF90_DEF_VAR(ncout,"Fgamma",NF90_DOUBLE,dim_one,varid_Fgamma)
  call handle_err(status,50113)
  status = NF90_DEF_VAR(ncout,"nl_tnu2",NF90_DOUBLE,dim_two,varid_tnu2)
  call handle_err(status,50114)
  status = NF90_DEF_VAR(ncout,"nl_visc2",NF90_DOUBLE,dim_one,varid_visc2)
  call handle_err(status,50115)
  status = NF90_DEF_VAR(ncout,"Akt_bak",NF90_DOUBLE,dim_two,varid_Akt_bak)
  call handle_err(status,50116)
  status = NF90_DEF_VAR(ncout,"Akv_bak",NF90_DOUBLE,dim_one,varid_Akv_bak)
  call handle_err(status,50117)
!if (t.LE.sch_ens) then 
!status = NF90_DEF_VAR(ncout,"Akk_bak",NF90_DOUBLE,dim_one,varid_Akk_bak)
!  call handle_err(status,50118)
!  status = NF90_DEF_VAR(ncout,"Akp_bak",NF90_DOUBLE,dim_one,varid_Akp_bak)
!  call handle_err(status,50119)
!endif
  status = NF90_DEF_VAR(ncout,"rdrg",NF90_DOUBLE,dim_one,varid_rdrg)
  call handle_err(status,50120)
  status = NF90_DEF_VAR(ncout,"rdrg2",NF90_DOUBLE,dim_one,varid_rdrg2)
  call handle_err(status,50121)
  status = NF90_DEF_VAR(ncout,"Zob",NF90_DOUBLE,dim_one,varid_Zob)
  call handle_err(status,50122)
  status = NF90_DEF_VAR(ncout,"Zos",NF90_DOUBLE,dim_one,varid_Zos)
  call handle_err(status,50123)
  status = NF90_DEF_VAR(ncout,"Znudg",NF90_DOUBLE,dim_one,varid_Znudg)
  call handle_err(status,50124)
  status = NF90_DEF_VAR(ncout,"M2nudg",NF90_DOUBLE,dim_one,varid_M2nudg)
  call handle_err(status,50125)
  status = NF90_DEF_VAR(ncout,"M3nudg",NF90_DOUBLE,dim_one,varid_M3nudg)
  call handle_err(status,50126)
  status = NF90_DEF_VAR(ncout,"Tnudg",NF90_DOUBLE,dim_two,varid_Tnudg)
  call handle_err(status,50127)
  status = NF90_DEF_VAR(ncout,"rho0",NF90_DOUBLE,dim_one,varid_rho0)
  call handle_err(status,50128)
  status = NF90_DEF_VAR(ncout,"gamma2",NF90_DOUBLE,dim_one,varid_gamma2)
  call handle_err(status,50129)
! status = NF90_DEF_VAR(ncout,"spherical",NF90_CHAR,dim_one,varid_spherical)
  status = NF90_DEF_VAR(ncout,"spherical",NF90_INT,dim_one,varid_spherical)
  call handle_err(status,50130)
  status = NF90_DEF_VAR(ncout,"xl",NF90_DOUBLE,dim_one,varid_xl)
  call handle_err(status,50131)
  status = NF90_DEF_VAR(ncout,"el",NF90_DOUBLE,dim_one,varid_el)
  call handle_err(status,50132)
  status = NF90_DEF_VAR(ncout,"theta_s",NF90_DOUBLE,dim_one,varid_theta_s)
  call handle_err(status,50133)
  status = NF90_DEF_VAR(ncout,"theta_b",NF90_DOUBLE,dim_one,varid_theta_b)
  call handle_err(status,50134)
  status = NF90_DEF_VAR(ncout,"Tcline",NF90_DOUBLE,dim_one,varid_Tcline)
  call handle_err(status,50135)
  status = NF90_DEF_VAR(ncout,"hc",NF90_DOUBLE,dim_one,varid_hc)
  call handle_err(status,50136)
  status = NF90_DEF_VAR(ncout,"s_rho",NF90_DOUBLE,dim_s_rho,varid_s_rho)
  call handle_err(status,50137)
  status = NF90_DEF_VAR(ncout,"s_w",NF90_DOUBLE,dim_s_w,varid_s_w)
  call handle_err(status,50138)
  status = NF90_DEF_VAR(ncout,"Cs_r",NF90_DOUBLE,dim_s_rho,varid_Cs_r)
  call handle_err(status,50139)
  status = NF90_DEF_VAR(ncout,"Cs_w",NF90_DOUBLE,dim_s_w,varid_Cs_w)
  call handle_err(status,50140)
  status = NF90_DEF_VAR(ncout,"h",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_h)
  call handle_err(status,50141)
  status = NF90_DEF_VAR(ncout,"f",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_f)
  call handle_err(status,50142)
  status = NF90_DEF_VAR(ncout,"pm",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_pm)
  call handle_err(status,50143)
  status = NF90_DEF_VAR(ncout,"pn",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_pn)
  call handle_err(status,50144)
  status = NF90_DEF_VAR(ncout,"lon_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_lon_rho)
  call handle_err(status,50145)
  status = NF90_DEF_VAR(ncout,"lat_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_lat_rho)
  call handle_err(status,50146)
  status = NF90_DEF_VAR(ncout,"lon_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_lon_u)
  call handle_err(status,50147)
  status = NF90_DEF_VAR(ncout,"lat_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_lat_u)
  call handle_err(status,50148)
  status = NF90_DEF_VAR(ncout,"lon_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_lon_v)
  call handle_err(status,50149)
  status = NF90_DEF_VAR(ncout,"lat_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_lat_v)
  call handle_err(status,50150)
  status = NF90_DEF_VAR(ncout,"lon_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_lon_psi)
  call handle_err(status,50151)
  status = NF90_DEF_VAR(ncout,"lat_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_lat_psi)
  call handle_err(status,50152)
  status = NF90_DEF_VAR(ncout,"angle",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_angle)
  call handle_err(status,50153)
  status = NF90_DEF_VAR(ncout,"mask_rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho/),varid_mask_rho)
  call handle_err(status,50154)
  status = NF90_DEF_VAR(ncout,"mask_u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u/),varid_mask_u)
  call handle_err(status,50155)
  status = NF90_DEF_VAR(ncout,"mask_v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v/),varid_mask_v)
  call handle_err(status,50156)
  status = NF90_DEF_VAR(ncout,"mask_psi",NF90_DOUBLE,(/dim_xi_psi,dim_eta_psi/),varid_mask_psi)
  call handle_err(status,50157)
  status = NF90_DEF_VAR(ncout,"ocean_time",NF90_DOUBLE,dim_ocean_time,varid_ocean_time)
  call handle_err(status,50158)
  status = NF90_DEF_VAR(ncout,"zeta",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_ocean_time/),varid_zeta)
  call handle_err(status,50159)
  status = NF90_DEF_VAR(ncout,"ubar",NF90_DOUBLE,(/dim_xi_u,dim_eta_u,dim_ocean_time/),varid_ubar)
  call handle_err(status,50160)
  status = NF90_DEF_VAR(ncout,"vbar",NF90_DOUBLE,(/dim_xi_v,dim_eta_v,dim_ocean_time/),varid_vbar)
  call handle_err(status,50161)
  status = NF90_DEF_VAR(ncout,"u",NF90_DOUBLE,(/dim_xi_u,dim_eta_u,dim_s_rho,dim_ocean_time/),varid_u)
  call handle_err(status,50162)
  status = NF90_DEF_VAR(ncout,"v",NF90_DOUBLE,(/dim_xi_v,dim_eta_v,dim_s_rho,dim_ocean_time/),varid_v)
  call handle_err(status,50163)
  status = NF90_DEF_VAR(ncout,"temp",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_temp)
  call handle_err(status,50164)
  status = NF90_DEF_VAR(ncout,"salt",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_salt)
  call handle_err(status,50165)
!  status = NF90_DEF_VAR(ncout,"rho",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_rho,dim_ocean_time/),varid_rho)
!  call handle_err(status,50166)
!  status = NF90_DEF_VAR(ncout,"AKv",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKv)
!  call handle_err(status,50167)
!  status = NF90_DEF_VAR(ncout,"AKt",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKt)
!  call handle_err(status,50168)
!  status = NF90_DEF_VAR(ncout,"AKs",NF90_DOUBLE,(/dim_xi_rho,dim_eta_rho,dim_s_w,dim_ocean_time/),varid_AKs)
!  call handle_err(status,50169)
 
  ! Global attribute
  status = NF90_PUT_ATT(ncout,NF90_GLOBAL,'NumFilesInSet',num_idomain)
  
  ! Variable attribute
  status = NF90_PUT_ATT(ncout,varid_ntimes,"long_name","number of long time-steps")
  call handle_err(status,50201)
  status = NF90_PUT_ATT(ncout,varid_ndtfast,"long_name","number of short time-steps")
  call handle_err(status,50202)
  status = NF90_PUT_ATT(ncout,varid_dt,"long_name","size of long time-steps")
  call handle_err(status,502031)
  status = NF90_PUT_ATT(ncout,varid_dt,"units","second")
  call handle_err(status,502031)
  status = NF90_PUT_ATT(ncout,varid_dtfast,"long_name","size of short time-steps")
  call handle_err(status,502041)
  status = NF90_PUT_ATT(ncout,varid_dtfast,"units","second")
  call handle_err(status,502042)
  status = NF90_PUT_ATT(ncout,varid_dstart,"long_name","time stamp assigned to model initilization")
  call handle_err(status,502051)
  status = NF90_PUT_ATT(ncout,varid_dstart,"units","days since 1982-01-01 00:00:00")
  call handle_err(status,502052)
  status = NF90_PUT_ATT(ncout,varid_nHIS,"long_name","number of time-steps between history records")
  call handle_err(status,50206)
  status = NF90_PUT_ATT(ncout,varid_ndefHIS,"long_name","number of time-steps between the creation of history files")
  call handle_err(status,50207)
  status = NF90_PUT_ATT(ncout,varid_nRST,"long_name","number of time-steps between restart records")
  call handle_err(status,50208)
  status = NF90_PUT_ATT(ncout,varid_ntsAVG,"long_name","starting time-step for accumulation of time-averaged fields")
  call handle_err(status,50209)
  status = NF90_PUT_ATT(ncout,varid_nAVG,"long_name","number of time-steps between time-averaged records")
  call handle_err(status,50210)
  status = NF90_PUT_ATT(ncout,varid_ndefAVG,"long_name","number of time-steps between the creation of average files")
  call handle_err(status,50211)
  status = NF90_PUT_ATT(ncout,varid_Falpha,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,50212)
  status = NF90_PUT_ATT(ncout,varid_Fbeta,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,50213)
  status = NF90_PUT_ATT(ncout,varid_Fgamma,"long_name","Power-law shape barotropic filter parameter")
  call handle_err(status,50214)
  status = NF90_PUT_ATT(ncout,varid_tnu2,"long_name","nonlinear model Laplacian mixing coefficient for tracers")
  call handle_err(status,502151)
  status = NF90_PUT_ATT(ncout,varid_tnu2,"units","meter2 second-1")
  call handle_err(status,502152)
  status = NF90_PUT_ATT(ncout,varid_visc2,"long_name","nonlinear model Laplacian mixing coefficient for momentum")
  call handle_err(status,502161)
  status = NF90_PUT_ATT(ncout,varid_visc2,"units","meter2 second-1")
  call handle_err(status,502162)
  status = NF90_PUT_ATT(ncout,varid_Akt_bak,"long_name","background vertical mixing coefficient for tracers")
  call handle_err(status,502171)
  status = NF90_PUT_ATT(ncout,varid_Akt_bak,"units","meter2 second-1")
  call handle_err(status,502172)
  status = NF90_PUT_ATT(ncout,varid_Akv_bak,"long_name","background vertical mixing coefficient for momentum")
  call handle_err(status,502181)
  status = NF90_PUT_ATT(ncout,varid_Akv_bak,"units","meter2 second-1")
  call handle_err(status,502182)
  
!  if (t.LE.sch_ens)then
!  status = NF90_PUT_ATT(ncout,varid_Akk_bak,"long_name","background vertical mixing coefficient for turbulent energy")
!  call handle_err(status,502191)
!  status = NF90_PUT_ATT(ncout,varid_Akk_bak,"units","meter2 second-1")
!  call handle_err(status,502192)
!  status = NF90_PUT_ATT(ncout,varid_Akp_bak,"long_name","background vertical mixing coefficient for length scale")
!  call handle_err(status,502201)
!  status = NF90_PUT_ATT(ncout,varid_Akp_bak,"units","meter2 second-1")
!  call handle_err(status,502202)
!endif 
 status = NF90_PUT_ATT(ncout,varid_rdrg,"long_name","linear drag coefficient")
  call handle_err(status,502211)
  status = NF90_PUT_ATT(ncout,varid_rdrg,"units","meter second-1")
  call handle_err(status,502212)
  status = NF90_PUT_ATT(ncout,varid_rdrg2,"long_name","quadratic drag coefficient")
  call handle_err(status,50222)
  status = NF90_PUT_ATT(ncout,varid_Zos,"long_name","surface roughness")
  call handle_err(status,502231)
  status = NF90_PUT_ATT(ncout,varid_Zos,"units","meter")
  call handle_err(status,502232)
  status = NF90_PUT_ATT(ncout,varid_Znudg,"long_name","free-surface nudging/relaxation inverse time scale")
  call handle_err(status,502241)
  status = NF90_PUT_ATT(ncout,varid_Znudg,"units","day-1")
  call handle_err(status,502242)
  status = NF90_PUT_ATT(ncout,varid_M2nudg,"long_name","2D momentum nudging/relaxation inverse time scale")
  call handle_err(status,502251)
  status = NF90_PUT_ATT(ncout,varid_M2nudg,"units","day-1")
  call handle_err(status,502252)
  status = NF90_PUT_ATT(ncout,varid_M3nudg,"long_name","3D momentum nudging/relaxation inverse time scale")
  call handle_err(status,502261)
  status = NF90_PUT_ATT(ncout,varid_M3nudg,"units","day-1")
  call handle_err(status,502262)
  status = NF90_PUT_ATT(ncout,varid_Tnudg,"long_name","Tracers nudging/relaxation inverse time scale")
  call handle_err(status,502271)
  status = NF90_PUT_ATT(ncout,varid_Tnudg,"units","day-1")
  call handle_err(status,502272)
  status = NF90_PUT_ATT(ncout,varid_rho0,"long_name","mean density used in Boussinesq approximation")
  call handle_err(status,502281)
  status = NF90_PUT_ATT(ncout,varid_rho0,"units","kilogram meter-3")
  call handle_err(status,502282)
  status = NF90_PUT_ATT(ncout,varid_gamma2,"long_name","Slipperiness parameter")
  call handle_err(status,50229)
  status = NF90_PUT_ATT(ncout,varid_spherical,"long_name","grid type logical switch")
  call handle_err(status,502301)
  status = NF90_PUT_ATT(ncout,varid_spherical,"option_T","spherical")
  call handle_err(status,502302)
  status = NF90_PUT_ATT(ncout,varid_spherical,"option_F","Cartesian")
  call handle_err(status,502303)
  status = NF90_PUT_ATT(ncout,varid_xl,"long_name","domain length in the XI-direction")
  call handle_err(status,502311)
  status = NF90_PUT_ATT(ncout,varid_xl,"units","meter")
  call handle_err(status,502312)
  status = NF90_PUT_ATT(ncout,varid_el,"long_name","domain length in the ETA-direction")
  call handle_err(status,502321)
  status = NF90_PUT_ATT(ncout,varid_el,"units","meter")
  call handle_err(status,502322)
  status = NF90_PUT_ATT(ncout,varid_theta_s,"long_name","S-coordinate surface control parameter")
  call handle_err(status,50233)
  status = NF90_PUT_ATT(ncout,varid_theta_b,"long_name","S-coordinate bottom control parameter")
  call handle_err(status,50234)
  status = NF90_PUT_ATT(ncout,varid_Tcline,"long_name","S-coordinate surface/bottom layer width")
  call handle_err(status,502351)
  status = NF90_PUT_ATT(ncout,varid_Tcline,"units","meter")
  call handle_err(status,502352)
  status = NF90_PUT_ATT(ncout,varid_hc,"long_name","S-coordinate parameter, critical depth")
  call handle_err(status,502361)
  status = NF90_PUT_ATT(ncout,varid_hc,"units","meter")
  call handle_err(status,502362)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"long_name","S-coordinate at RHO-points")
  call handle_err(status,502371)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"valid_min",-1)
  call handle_err(status,502372)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"valid_max",0)
  call handle_err(status,502373)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"standard_name","ocean_s_coordinate")
  call handle_err(status,502374)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"formula_terms","s: s_rho eta: zeta depth: h a: theta_s b: theta_b depth_c: hc")
  call handle_err(status,502375)
  status = NF90_PUT_ATT(ncout,varid_s_rho,"field","s_rho, scalar")
  call handle_err(status,502376)
  status = NF90_PUT_ATT(ncout,varid_s_w,"long_name","S-coordinate at W-points")
  call handle_err(status,502381)
  status = NF90_PUT_ATT(ncout,varid_s_w,"valid_min",-1)
  call handle_err(status,502382)
  status = NF90_PUT_ATT(ncout,varid_s_w,"valid_max",0)
  call handle_err(status,502383)
  status = NF90_PUT_ATT(ncout,varid_s_w,"standard_name","ocean_s_coordinate")
  call handle_err(status,502384)
  status = NF90_PUT_ATT(ncout,varid_s_w,"formula_terms","s: s_w eta: zeta depth: h a: theta_s b: theta_b depth_c: hc")
  call handle_err(status,502385)
  status = NF90_PUT_ATT(ncout,varid_s_w,"field","s_w, scalar")
  call handle_err(status,502386)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"long_name","S-coordinate stretching curves at RHO-points")
  call handle_err(status,502391)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"valid_min",-1)
  call handle_err(status,502392)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"valid_max",0)
  call handle_err(status,502393)
  status = NF90_PUT_ATT(ncout,varid_Cs_r,"field","Cs_r, scalar")
  call handle_err(status,502394)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"long_name","S-coordinate stretching curves at W-points")
  call handle_err(status,502401)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"valid_min",-1)
  call handle_err(status,502402)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"valid_max",0)
  call handle_err(status,502403)
  status = NF90_PUT_ATT(ncout,varid_Cs_w,"field","Cs_w, scalar")
  call handle_err(status,502404)
  status = NF90_PUT_ATT(ncout,varid_h,"long_name","bathymetry at RHO-points")
  call handle_err(status,502411)
  status = NF90_PUT_ATT(ncout,varid_h,"units","meter")
  call handle_err(status,502412)
  status = NF90_PUT_ATT(ncout,varid_h,"coordinates","lat_rho lon_rho")
  call handle_err(status,502413)
  status = NF90_PUT_ATT(ncout,varid_h,"field","bath, scalar")
  call handle_err(status,502414)
  status = NF90_PUT_ATT(ncout,varid_f,"long_name","Coriolis parameter at RHO-points")
  call handle_err(status,502421)
  status = NF90_PUT_ATT(ncout,varid_f,"units","second-1")
  call handle_err(status,502422)
  status = NF90_PUT_ATT(ncout,varid_f,"coordinates","lat_rho lon_rho")
  call handle_err(status,502423)
  status = NF90_PUT_ATT(ncout,varid_f,"field","coriolis, scalar")
  call handle_err(status,502424)
  status = NF90_PUT_ATT(ncout,varid_pm,"long_name","curvilinear coordinate metric in XI")
  call handle_err(status,502431)
  status = NF90_PUT_ATT(ncout,varid_pm,"units","meter-1")
  call handle_err(status,502432)
  status = NF90_PUT_ATT(ncout,varid_pm,"coordinates","lat_rho lon_rho")
  call handle_err(status,502433)
  status = NF90_PUT_ATT(ncout,varid_pm,"field","pm, scalar")
  call handle_err(status,502434)
  status = NF90_PUT_ATT(ncout,varid_pn,"long_name","curvilinear coordinate metric in ETA")
  call handle_err(status,502441)
  status = NF90_PUT_ATT(ncout,varid_pn,"units","meter-1")
  call handle_err(status,502442)
  status = NF90_PUT_ATT(ncout,varid_pn,"coordinates","lat_rho lon_rho")
  call handle_err(status,502443)
  status = NF90_PUT_ATT(ncout,varid_pn,"field","pn, scalar")
  call handle_err(status,502444)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"long_name","longitude of RHO-points")
  call handle_err(status,502451)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"units","degree_east")
  call handle_err(status,502452)
  status = NF90_PUT_ATT(ncout,varid_lon_rho,"field","lon_rho, scalar")
  call handle_err(status,502453)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"long_name","latitude of RHO-points")
  call handle_err(status,502461)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"units","degree_north")
  call handle_err(status,502462)
  status = NF90_PUT_ATT(ncout,varid_lat_rho,"field","lat_rho, scalar")
  call handle_err(status,502463)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"long_name","longitude of U-points")
  call handle_err(status,502471)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"units","degree_east")
  call handle_err(status,502472)
  status = NF90_PUT_ATT(ncout,varid_lon_u,"field","lon_u, scalar") 
  call handle_err(status,502473) 
  status = NF90_PUT_ATT(ncout,varid_lat_u,"long_name","latitude of U-points")
  call handle_err(status,502481)
  status = NF90_PUT_ATT(ncout,varid_lat_u,"units","degree_north")
  call handle_err(status,502482)
  status = NF90_PUT_ATT(ncout,varid_lat_u,"field","lat_u, scalar")  
  call handle_err(status,502483)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"long_name","longitude of V-points")
  call handle_err(status,502491)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"units","degree_east")
  call handle_err(status,502492)
  status = NF90_PUT_ATT(ncout,varid_lon_v,"field","lon_v, scalar")  
  call handle_err(status,502493)
  status = NF90_PUT_ATT(ncout,varid_lat_v,"long_name","latitude of V-points")
  call handle_err(status,502501)
  status = NF90_PUT_ATT(ncout,varid_lat_v,"units","degree_north")
  call handle_err(status,502502)
  status = NF90_PUT_ATT(ncout,varid_lat_v,"field","lat_v, scalar")  
  call handle_err(status,502503)
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"long_name","longitude of PSI-points")
  call handle_err(status,502511)
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"units","degree_east") 
  call handle_err(status,502512)
  status = NF90_PUT_ATT(ncout,varid_lon_psi,"field","lon_psi, scalar") 
  call handle_err(status,502513) 
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"long_name","latitude of PSI-points")
  call handle_err(status,502521)
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"units","degree_north")
  call handle_err(status,502522)
  status = NF90_PUT_ATT(ncout,varid_lat_psi,"field","lat_psi, scalar")   
  call handle_err(status,502523) 
  status = NF90_PUT_ATT(ncout,varid_angle,"long_name","angle between XI-axis and EAST")
  call handle_err(status,502531)
  status = NF90_PUT_ATT(ncout,varid_angle,"units","radians")
  call handle_err(status,502532)
  status = NF90_PUT_ATT(ncout,varid_angle,"coordinates","lat_rho lon_rho")
  call handle_err(status,502533)
  status = NF90_PUT_ATT(ncout,varid_angle,"field","angle, scalar")
  call handle_err(status,502534)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"long_name","mask on RHO-points")
  call handle_err(status,502541)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"option_0","land")
  call handle_err(status,502542)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"option_1","water")  
  call handle_err(status,502543)
  status = NF90_PUT_ATT(ncout,varid_mask_rho,"coordinates","lat_rho lon_rho")
  call handle_err(status,502544)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"long_name","mask on U-points")
  call handle_err(status,502551)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"option_0","land")
  call handle_err(status,502552)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"option_1","water")  
  call handle_err(status,502553)
  status = NF90_PUT_ATT(ncout,varid_mask_u,"coordinates","lat_u lon_u")
  call handle_err(status,502554)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"long_name","mask on V-points")
  call handle_err(status,502561)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"option_0","land")
  call handle_err(status,502562)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"option_1","water")  
  call handle_err(status,502563)
  status = NF90_PUT_ATT(ncout,varid_mask_v,"coordinates","lat_v lon_v")
  call handle_err(status,502564)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"long_name","mask on PSI-points")
  call handle_err(status,502571)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"option_0","land")
  call handle_err(status,502572)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"option_1","water")  
  call handle_err(status,502573)
  status = NF90_PUT_ATT(ncout,varid_mask_psi,"coordinates","lat_psi lon_psi")
  call handle_err(status,502574)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"long_name","time since initialization")
  call handle_err(status,502581)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"units","seconds since 1982-01-01 00:00:00")
  call handle_err(status,502582)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"calendar","standard")  
  call handle_err(status,502583)
  status = NF90_PUT_ATT(ncout,varid_ocean_time,"field","time, scalar, series")  
  call handle_err(status,502584)
  status = NF90_PUT_ATT(ncout,varid_zeta,"long_name","free-surface")
  call handle_err(status,502591)
  status = NF90_PUT_ATT(ncout,varid_zeta,"units","meter")
  call handle_err(status,502592)
  status = NF90_PUT_ATT(ncout,varid_zeta,"time","ocean_time")  
  call handle_err(status,502601)
  status = NF90_PUT_ATT(ncout,varid_zeta,"coordinates","lat_rho lon_rho")  
  call handle_err(status,502602)
  status = NF90_PUT_ATT(ncout,varid_zeta,"field","free-surface, scalar, series")  
  call handle_err(status,502603)
  status = NF90_PUT_ATT(ncout,varid_ubar,"long_name","vertically integrated u-momentum component")
  call handle_err(status,502611)
  status = NF90_PUT_ATT(ncout,varid_ubar,"units","meter second-1")
  call handle_err(status,502612)
  status = NF90_PUT_ATT(ncout,varid_ubar,"time","ocean_time")  
  call handle_err(status,502613)
  status = NF90_PUT_ATT(ncout,varid_ubar,"coordinates","lat_u lon_u")  
  call handle_err(status,502614)
  status = NF90_PUT_ATT(ncout,varid_ubar,"field","ubar-velocity, scalar, series")
  call handle_err(status,502615)
  status = NF90_PUT_ATT(ncout,varid_vbar,"long_name","vertically integrated u-momentum component")
  call handle_err(status,502621)
  status = NF90_PUT_ATT(ncout,varid_vbar,"units","meter second-1")
  call handle_err(status,502622)
  status = NF90_PUT_ATT(ncout,varid_vbar,"time","ocean_time")  
  call handle_err(status,502623)
  status = NF90_PUT_ATT(ncout,varid_vbar,"coordinates","lat_v lon_v")  
  call handle_err(status,502624)
  status = NF90_PUT_ATT(ncout,varid_vbar,"field","vbar-velocity, scalar, series")
  call handle_err(status,502625)
  status = NF90_PUT_ATT(ncout,varid_u,"long_name","u-momentum component")
  call handle_err(status,502631)
  status = NF90_PUT_ATT(ncout,varid_u,"units","meter second-1")
  call handle_err(status,502632)
  status = NF90_PUT_ATT(ncout,varid_u,"time","ocean_time")  
  call handle_err(status,502633)
  status = NF90_PUT_ATT(ncout,varid_u,"coordinates","lat_u lon_u")  
  call handle_err(status,502634)
  status = NF90_PUT_ATT(ncout,varid_u,"field","u-velocity, scalar, series")
  call handle_err(status,502635)
  status = NF90_PUT_ATT(ncout,varid_v,"long_name","v-momentum component")
  call handle_err(status,502641)
  status = NF90_PUT_ATT(ncout,varid_v,"units","meter second-1")
  call handle_err(status,502642)
  status = NF90_PUT_ATT(ncout,varid_v,"time","ocean_time")  
  call handle_err(status,502643)
  status = NF90_PUT_ATT(ncout,varid_v,"coordinates","lat_v lon_v")  
  call handle_err(status,502644)
  status = NF90_PUT_ATT(ncout,varid_v,"field","v-velocity, scalar, series")  
  call handle_err(status,502645)
  status = NF90_PUT_ATT(ncout,varid_temp,"long_name","potential temperature")
  call handle_err(status,502651)
  status = NF90_PUT_ATT(ncout,varid_temp,"units","Celsius")
  call handle_err(status,502652)
  status = NF90_PUT_ATT(ncout,varid_temp,"time","ocean_time")  
  call handle_err(status,502653)
  status = NF90_PUT_ATT(ncout,varid_temp,"coordinates","lat_rho lon_rho")  
  call handle_err(status,502654)
  status = NF90_PUT_ATT(ncout,varid_temp,"field","temperature, scalar, series") 
  call handle_err(status,502655)
  status = NF90_PUT_ATT(ncout,varid_salt,"long_name","salinity")
  call handle_err(status,502661)
  status = NF90_PUT_ATT(ncout,varid_salt,"units","PSU")
  call handle_err(status,502662)
  status = NF90_PUT_ATT(ncout,varid_salt,"time","ocean_time")  
  call handle_err(status,502663)
  status = NF90_PUT_ATT(ncout,varid_salt,"coordinates","lat_rho lon_rho")  
  call handle_err(status,502664)
  status = NF90_PUT_ATT(ncout,varid_salt,"field","salinity, scalar, series")
  call handle_err(status,502665)
!  status = NF90_PUT_ATT(ncout,varid_rho,"long_name","density anomaly")
!  call handle_err(status,502671)
!  status = NF90_PUT_ATT(ncout,varid_rho,"units","kilogram meter-3")
!  call handle_err(status,502672)
!  status = NF90_PUT_ATT(ncout,varid_rho,"time","ocean_time")  
!  call handle_err(status,502673)
!  status = NF90_PUT_ATT(ncout,varid_rho,"coordinates","lat_rho lon_rho")  
!  call handle_err(status,502674)
!  status = NF90_PUT_ATT(ncout,varid_rho,"field","density, scalar, series")
!  call handle_err(status,502675)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"long_name","vertical viscosity coefficient")
!  call handle_err(status,502681)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"units","meter2 second-1")
!  call handle_err(status,502682)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"time","ocean_time")  
!  call handle_err(status,502683)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"coordinates","lat_rho lon_rho")  
!  call handle_err(status,502684)
!  status = NF90_PUT_ATT(ncout,varid_AKv,"field","AKv, scalar, series")  
!  call handle_err(status,502685)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"long_name","temperature vertical diffusion coefficient")
!  call handle_err(status,502691)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"units","meter2 second-1")
!  call handle_err(status,502692)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"time","ocean_time")  
!  call handle_err(status,502693)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"coordinates","lat_rho lon_rho")  
!  call handle_err(status,502694)
!  status = NF90_PUT_ATT(ncout,varid_AKt,"field","AKt, scalar, series")  
!  call handle_err(status,502695)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"long_name","salinity vertical diffusion coefficient")
!  call handle_err(status,502701)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"units","meter2 second-1")
!  call handle_err(status,502702)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"time","ocean_time")  
!  call handle_err(status,502703)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"coordinates","lat_rho lon_rho")  
!  call handle_err(status,502704)
!  status = NF90_PUT_ATT(ncout,varid_AKs,"field","AKs, scalar, series")  
!  call handle_err(status,502705)
  
  ! End of definition
  status = NF90_ENDDEF(ncout)
  call handle_err(status,50299)
  status = NF90_PUT_VAR(ncout,varid_ntimes,ntimesi)
  call handle_err(status,50301)
  status = NF90_PUT_VAR(ncout,varid_ndtfast,ndtfasti)
  call handle_err(status,50302)
  status = NF90_PUT_VAR(ncout,varid_dt,dti)
  call handle_err(status,50303)
  status = NF90_PUT_VAR(ncout,varid_dtfast,dtfasti)
  call handle_err(status,50304)
  status = NF90_PUT_VAR(ncout,varid_dstart,dstarti)
  call handle_err(status,50305)
  status = NF90_PUT_VAR(ncout,varid_nHIS,nHISi)
  call handle_err(status,50306)
  status = NF90_PUT_VAR(ncout,varid_ndefHIS,ndefHISi)
  call handle_err(status,50307)
  status = NF90_PUT_VAR(ncout,varid_nRST,nRSTi)
  call handle_err(status,50308)
  status = NF90_PUT_VAR(ncout,varid_ntsAVG,ntsAVGi)
  call handle_err(status,50309)
  status = NF90_PUT_VAR(ncout,varid_nAVG,nAVGi)
  call handle_err(status,50310)
  status = NF90_PUT_VAR(ncout,varid_ndefAVG,ndefAVGi)
  call handle_err(status,50311)
  status = NF90_PUT_VAR(ncout,varid_Falpha,Falphai)
  call handle_err(status,50312)
  status = NF90_PUT_VAR(ncout,varid_Fbeta,Fbetai)
  call handle_err(status,50313)
  status = NF90_PUT_VAR(ncout,varid_Fgamma,Fgammai)
  call handle_err(status,50314)
  status = NF90_PUT_VAR(ncout,varid_tnu2,tnu2i)
  call handle_err(status,50315)
  status = NF90_PUT_VAR(ncout,varid_visc2,visc2i)
  call handle_err(status,50316)
  status = NF90_PUT_VAR(ncout,varid_Akt_bak,Akt_baki)
  call handle_err(status,50317)
  status = NF90_PUT_VAR(ncout,varid_Akv_bak,Akv_baki)
  call handle_err(status,50318)
!if (t.LE.sch_ens) then  
!status = NF90_PUT_VAR(ncout,varid_Akk_bak,Akk_baki)
!  call handle_err(status,50319)
!  status = NF90_PUT_VAR(ncout,varid_Akp_bak,Akp_baki)
!  call handle_err(status,50320)
!endif
  status = NF90_PUT_VAR(ncout,varid_rdrg,rdrgi)
  call handle_err(status,50321)
  status = NF90_PUT_VAR(ncout,varid_rdrg2,rdrg2i)
  call handle_err(status,50322)
  status = NF90_PUT_VAR(ncout,varid_Zob,Zobi)
  call handle_err(status,50323)
  status = NF90_PUT_VAR(ncout,varid_Zos,Zosi)
  call handle_err(status,50324)
  status = NF90_PUT_VAR(ncout,varid_Znudg,Znudgi)
  call handle_err(status,50325)
  status = NF90_PUT_VAR(ncout,varid_M2nudg,M2nudgi)
  call handle_err(status,50326)
  status = NF90_PUT_VAR(ncout,varid_M3nudg,M3nudgi)
  call handle_err(status,50327)
  status = NF90_PUT_VAR(ncout,varid_Tnudg,Tnudgi)
  call handle_err(status,50328)
  status = NF90_PUT_VAR(ncout,varid_rho0,rho0i)
  call handle_err(status,50329)
  status = NF90_PUT_VAR(ncout,varid_gamma2,gamma2i)
  call handle_err(status,50330)
  status = NF90_PUT_VAR(ncout,varid_spherical,sphericali)
  call handle_err(status,50331)
  status = NF90_PUT_VAR(ncout,varid_xl,xli)
  call handle_err(status,50332)
  status = NF90_PUT_VAR(ncout,varid_el,eli)
  call handle_err(status,50333)
  status = NF90_PUT_VAR(ncout,varid_theta_s,theta_si)
  call handle_err(status,50334)
  status = NF90_PUT_VAR(ncout,varid_theta_b,theta_bi)
  call handle_err(status,50335)
  status = NF90_PUT_VAR(ncout,varid_Tcline,Tclinei)
  call handle_err(status,50336)
  status = NF90_PUT_VAR(ncout,varid_hc,hci)
  call handle_err(status,50337)
  status = NF90_PUT_VAR(ncout,varid_s_rho,s_rhoi)
  call handle_err(status,50338)
  status = NF90_PUT_VAR(ncout,varid_s_w,s_wi)
  call handle_err(status,50339)
  status = NF90_PUT_VAR(ncout,varid_Cs_r,Cs_ri)
  call handle_err(status,50340)
  status = NF90_PUT_VAR(ncout,varid_Cs_w,Cs_wi)
  call handle_err(status,50341)
  status = NF90_PUT_VAR(ncout,varid_h,hi)
  call handle_err(status,50342)
  status = NF90_PUT_VAR(ncout,varid_f,fi)
  call handle_err(status,50343)
  status = NF90_PUT_VAR(ncout,varid_pm,pmi)
  call handle_err(status,50344)
  status = NF90_PUT_VAR(ncout,varid_pn,pni)
  call handle_err(status,50345)
  status = NF90_PUT_VAR(ncout,varid_lon_rho,lon_rhoi)
  call handle_err(status,50346)
  status = NF90_PUT_VAR(ncout,varid_lat_rho,lat_rhoi)
  call handle_err(status,50347)
  status = NF90_PUT_VAR(ncout,varid_lon_u,lon_ui)
  call handle_err(status,50348)
  status = NF90_PUT_VAR(ncout,varid_lat_u,lat_ui)
  call handle_err(status,50349)
  status = NF90_PUT_VAR(ncout,varid_lon_v,lon_vi)
  call handle_err(status,50350)
  status = NF90_PUT_VAR(ncout,varid_lat_v,lat_vi)
  call handle_err(status,50351)
  status = NF90_PUT_VAR(ncout,varid_lon_psi,lon_psii)
  call handle_err(status,50352)
  status = NF90_PUT_VAR(ncout,varid_lat_psi,lat_psii)
  call handle_err(status,50353)
  status = NF90_PUT_VAR(ncout,varid_angle,anglei)
  call handle_err(status,50354)
  status = NF90_PUT_VAR(ncout,varid_mask_rho,mask_rhoi)
  call handle_err(status,50355)
  status = NF90_PUT_VAR(ncout,varid_mask_u,mask_ui)
  call handle_err(status,50356)
  status = NF90_PUT_VAR(ncout,varid_mask_v,mask_vi)
  call handle_err(status,50357)
  status = NF90_PUT_VAR(ncout,varid_mask_psi,mask_psii)
  call handle_err(status,50358)
  status = NF90_PUT_VAR(ncout,varid_ocean_time,ocean_timei)
  call handle_err(status,50359)
!  do i = 1,
!   do j =
!  zeta_st(i,j) = zeta_r(:,:,tt)
!  ubar_st(i,j) = ubar_r(:,:,tt)
!  vbar_st(i,j) = vbar_r(:,:,tt)
!  u_st(i,j) = u_r(:,:,:,tt)
!  v_st(i,j) = v_r(:,:,:,tt)
!  temp_st(i,j) = temp_r(:,:,:,tt)
!  salt_st(i,j) = salt_r(:,:,:,tt)
  status = NF90_PUT_VAR(ncout,varid_zeta,zeta_r(:,:,1))
  call handle_err(status,30380)
  status = NF90_PUT_VAR(ncout,varid_ubar,ubar_r(:,:,1))
  call handle_err(status,30381)
  status = NF90_PUT_VAR(ncout,varid_vbar,vbar_r(:,:,1))
  call handle_err(status,30382)
  status = NF90_PUT_VAR(ncout,varid_u,u_r(:,:,:,1))
! status = NF90_PUT_VAR(ncout,varid_u,u_st)
  call handle_err(status,30383)
  status = NF90_PUT_VAR(ncout,varid_v,v_r(:,:,:,1))
! status = NF90_PUT_VAR(ncout,varid_v,v_st)
  call handle_err(status,30384)
  status = NF90_PUT_VAR(ncout,varid_temp,temp_r(:,:,:,1))
! status = NF90_PUT_VAR(ncout,varid_temp,temp_st)
  call handle_err(status,30385)
  status = NF90_PUT_VAR(ncout,varid_salt,salt_r(:,:,:,1))
! status = NF90_PUT_VAR(ncout,varid_salt,salt_st)
  call handle_err(status,30386)
!  status = NF90_PUT_VAR(ncout,varid_rho,rhoi)
!  call handle_err(status,30387)
!  status = NF90_PUT_VAR(ncout,varid_AKv,AKvi)
!  call handle_err(status,30388)
!  status = NF90_PUT_VAR(ncout,varid_AKt,AKti)
!  call handle_err(status,30389)
!  status = NF90_PUT_VAR(ncout,varid_AKs,AKsi)
!  call handle_err(status,30390)
  status = NF90_CLOSE(ncout)
  call handle_err(status,39999)
!enddo 
!write(*,*)ocean_time
  !new_outfile='ocean_rst_ens'
  !write(ttext,'(I2.2)') t
  !new_outfile=trim(new_outfile)//trim(ttext)//'_out.nc'
  !call copy_nc(outfile,new_outfile)

!write(*,*)"1"
 deallocate(zeta_r,ubar_r, vbar_r, u_r, v_r, temp_r, salt_r)
!deallocate(zeta_st,ubar_st, vbar_st, u_st, v_st, temp_st, salt_st)
!write(*,*)"2"
end subroutine save_anal

 subroutine handle_err(status,ern)

 use netcdf

 integer, intent ( in) :: status,ern
     
  if(status /= nf90_noerr) then
   write(*,*) ern
   print *, trim(nf90_strerror(status))
   stop "Stopped"
  end if
 end subroutine handle_err

